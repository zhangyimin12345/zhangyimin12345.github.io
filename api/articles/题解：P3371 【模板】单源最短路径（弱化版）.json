{"title":"题解：P3371 【模板】单源最短路径（弱化版）","uid":"2576f649dc2536db9d92a414b582ade4","slug":"题解：P3371 【模板】单源最短路径（弱化版）","date":"2025-05-08T16:00:00.000Z","updated":"2025-05-26T13:21:18.000Z","comments":true,"path":"api/articles/题解：P3371 【模板】单源最短路径（弱化版）.json","keywords":null,"cover":"https://cdn.luogu.com.cn/upload/image_hosting/fv11znvo.png","content":"<p><strong><del>题目都说了可以用 SPFA 啊，秀啥 Dijkstra 啊！</del></strong></p>\n<h2 id=\"先介绍一下-SPFA-死了的算法。\"><a href=\"#先介绍一下-SPFA-死了的算法。\" class=\"headerlink\" title=\"先介绍一下 SPFA 死了的算法。\"></a>先介绍一下 SPFA <del>死了的算法</del>。</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>SPFA 算法，全名 Shortest Path Faster Algorithm，是一种用于解决单源最短路径问题的算法，它是 Bellman-Ford 算法的改进版本。SPFA 算法可以处理带有负权边的图，但不能处理带有负权环的图。算法的基本思想是使用一个队列来存储所有待优化的节点，并通过不断的松弛操作来逼近最短路径。</strong></p>\n<p><strong>注：来源于网络。</strong></p></blockquote>\n<h2 id=\"SPFA-的基本步骤\"><a href=\"#SPFA-的基本步骤\" class=\"headerlink\" title=\"SPFA 的基本步骤\"></a><strong>SPFA 的基本步骤</strong></h2><ol>\n<li><p>初始化答案数组，全部设为无穷大。</p>\n</li>\n<li><p>将源点加入队列，打上在队列的标记，将到起点的答案设为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>。</p>\n</li>\n<li><p>队列非空时，取出队首元素存下后立即取消标记并弹出队首元素，并对其所有出边进行松弛操作。</p>\n</li>\n<li><p>如果松弛成功，并且终点不在队列中，则将终点加入队列并打上在队列的标记。</p>\n</li>\n<li><p>重复步骤 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span>，直到队列为空。</p>\n</li>\n</ol>\n<h2 id=\"手玩一下样例\"><a href=\"#手玩一下样例\" class=\"headerlink\" title=\"手玩一下样例\"></a><strong>手玩一下样例</strong></h2><p>样例如图</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/847gkksx.png\"></p>\n<p>将答案数组记作 dis，是否在队列的标记数组记作 vis。</p>\n<p>最开始的 dis 与 vis 如下图。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/eiyjmmol.png\"></p>\n<p>最开始的队列如下图。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/cwddg36i.png\"></p>\n<p>第一轮，取队首元素 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，此时 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> 能松弛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span>，且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span> 都不在队列中，都没打标记，所以将这几个数全部扔进队列并打上标记。</p>\n<p>此时的 dis、vis、队列如下图。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/qhndrthc.png\"></p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/h3rkyn3k.png\"></p>\n<p>第二轮，取队首元素 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>，此时 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span> 能松弛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span>，但 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span> 都在队列中，都打了标记，所以不再扔进队列。</p>\n<p>此时的 dis、vis、队列如下图。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/0lt1c8pg.png\"></p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/dzvw5x46.png\"></p>\n<p>第三轮，取队首元素 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span>，此时 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span> 不能松弛任何一个点。</p>\n<p>此时的 dis、vis、队列如下图。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/0q6xwmk8.png\"></p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/q7pvciwz.png\"></p>\n<p>第三轮，取队首元素 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span>，此时 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span> 不能松弛任何一个点。</p>\n<p>此时的 dis、vis、队列如下图。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/8gddco90.png\"></p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/i9h8nnp6.png\"></p>\n<p>此时队列已经空了，结束。</p>\n<h2 id=\"放代码\"><a href=\"#放代码\" class=\"headerlink\" title=\"放代码\"></a>放代码</h2><pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49\"># include</span><span style=\"color:#032F62\"> &#x3C;bits/stdc++.h></span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">using</span><span style=\"color:#D73A49\"> namespace</span><span style=\"color:#6F42C1\"> std</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">int</span><span style=\"color:#24292E\"> n , m , s , u , v , w , dis[</span><span style=\"color:#005CC5\">10010</span><span style=\"color:#24292E\">];</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">bool</span><span style=\"color:#24292E\"> vis[</span><span style=\"color:#005CC5\">10010</span><span style=\"color:#24292E\">];</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">vector </span><span style=\"color:#D73A49\">&#x3C;</span><span style=\"color:#24292E\">pair </span><span style=\"color:#D73A49\">&#x3C;int</span><span style=\"color:#24292E\"> , </span><span style=\"color:#D73A49\">int></span><span style=\"color:#D73A49\"> ></span><span style=\"color:#24292E\"> g[</span><span style=\"color:#005CC5\">10010</span><span style=\"color:#24292E\">];</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">void</span><span style=\"color:#6F42C1\"> bfs</span><span style=\"color:#24292E\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">&#123;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    for</span><span style=\"color:#24292E\">(</span><span style=\"color:#D73A49\">int</span><span style=\"color:#24292E\"> i </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#24292E\"> ; i </span><span style=\"color:#D73A49\">&#x3C;=</span><span style=\"color:#24292E\"> n ; i </span><span style=\"color:#D73A49\">++</span><span style=\"color:#24292E\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    &#123;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        dis[i] </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#D73A49\">e</span><span style=\"color:#005CC5\">9</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    queue </span><span style=\"color:#D73A49\">&#x3C;int></span><span style=\"color:#24292E\"> q;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    q.</span><span style=\"color:#6F42C1\">push</span><span style=\"color:#24292E\">(s);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    vis[s] </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    dis[s] </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 0</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    while</span><span style=\"color:#24292E\">(</span><span style=\"color:#D73A49\">!</span><span style=\"color:#24292E\">q.</span><span style=\"color:#6F42C1\">empty</span><span style=\"color:#24292E\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    &#123;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        int</span><span style=\"color:#24292E\"> t </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> q.</span><span style=\"color:#6F42C1\">front</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        q.</span><span style=\"color:#6F42C1\">pop</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        vis[t] </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 0</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        for</span><span style=\"color:#24292E\">(</span><span style=\"color:#D73A49\">int</span><span style=\"color:#24292E\"> i </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 0</span><span style=\"color:#24292E\"> ; i </span><span style=\"color:#D73A49\">&#x3C;</span><span style=\"color:#24292E\"> g[t].</span><span style=\"color:#6F42C1\">size</span><span style=\"color:#24292E\">() ; i </span><span style=\"color:#D73A49\">++</span><span style=\"color:#24292E\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        &#123;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            if</span><span style=\"color:#24292E\">(dis[g[t][i].first] </span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\"> dis[t] </span><span style=\"color:#D73A49\">+</span><span style=\"color:#24292E\"> g[t][i].second)</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            &#123;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                dis[g[t][i].first] </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> dis[t] </span><span style=\"color:#D73A49\">+</span><span style=\"color:#24292E\"> g[t][i].second;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                if</span><span style=\"color:#24292E\">(vis[g[t][i].first])</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                &#123;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                    continue</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                vis[g[t][i].first] </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                q.</span><span style=\"color:#6F42C1\">push</span><span style=\"color:#24292E\">(g[t][i].first);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    return</span><span style=\"color:#24292E\"> ;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">&#125;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">int</span><span style=\"color:#6F42C1\"> main</span><span style=\"color:#24292E\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">&#123;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">    ios</span><span style=\"color:#24292E\">::</span><span style=\"color:#6F42C1\">sync_with_stdio</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">0</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    cin.</span><span style=\"color:#6F42C1\">tie</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">0</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    cout.</span><span style=\"color:#6F42C1\">tie</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">0</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    cin </span><span style=\"color:#D73A49\">>></span><span style=\"color:#24292E\"> n </span><span style=\"color:#D73A49\">>></span><span style=\"color:#24292E\"> m </span><span style=\"color:#D73A49\">>></span><span style=\"color:#24292E\"> s;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    for</span><span style=\"color:#24292E\">(</span><span style=\"color:#D73A49\">int</span><span style=\"color:#24292E\"> i </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#24292E\"> ; i </span><span style=\"color:#D73A49\">&#x3C;=</span><span style=\"color:#24292E\"> m ; i </span><span style=\"color:#D73A49\">++</span><span style=\"color:#24292E\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    &#123;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        cin </span><span style=\"color:#D73A49\">>></span><span style=\"color:#24292E\"> u </span><span style=\"color:#D73A49\">>></span><span style=\"color:#24292E\"> v </span><span style=\"color:#D73A49\">>></span><span style=\"color:#24292E\"> w;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        g[u].</span><span style=\"color:#6F42C1\">push_back</span><span style=\"color:#24292E\">(&#123;v , w&#125;);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">    bfs</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    for</span><span style=\"color:#24292E\">(</span><span style=\"color:#D73A49\">int</span><span style=\"color:#24292E\"> i </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#24292E\"> ; i </span><span style=\"color:#D73A49\">&#x3C;=</span><span style=\"color:#24292E\"> n ; i </span><span style=\"color:#D73A49\">++</span><span style=\"color:#24292E\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    &#123;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        if</span><span style=\"color:#24292E\">(dis[i] </span><span style=\"color:#D73A49\">==</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#D73A49\">e</span><span style=\"color:#005CC5\">9</span><span style=\"color:#24292E\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        &#123;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            cout </span><span style=\"color:#D73A49\">&#x3C;&#x3C;</span><span style=\"color:#24292E\"> (</span><span style=\"color:#005CC5\">1</span><span style=\"color:#D73A49\">LL</span><span style=\"color:#D73A49\"> &#x3C;&#x3C;</span><span style=\"color:#005CC5\"> 31</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">-</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#D73A49\"> &#x3C;&#x3C;</span><span style=\"color:#032F62\"> \" \"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        else</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        &#123;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            cout </span><span style=\"color:#D73A49\">&#x3C;&#x3C;</span><span style=\"color:#24292E\"> dis[i] </span><span style=\"color:#D73A49\">&#x3C;&#x3C;</span><span style=\"color:#032F62\"> \" \"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    return</span><span style=\"color:#005CC5\"> 0</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">&#125;</span></span></code></pre>","text":"题目都说了可以用 SPFA 啊，秀啥 Dijkstra 啊！ 先介绍一下 SPFA 死了的算法。 SPFA 算法，全名 Shortest Path Faster...","permalink":"/post/题解：P3371 【模板】单源最短路径（弱化版）","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"题解","slug":"题解","count":1,"path":"api/categories/题解.json"}],"tags":[{"name":"OI","slug":"OI","count":7,"path":"api/tags/OI.json"},{"name":"最短路","slug":"最短路","count":1,"path":"api/tags/最短路.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%88%E4%BB%8B%E7%BB%8D%E4%B8%80%E4%B8%8B-SPFA-%E6%AD%BB%E4%BA%86%E7%9A%84%E7%AE%97%E6%B3%95%E3%80%82\"><span class=\"toc-text\">先介绍一下 SPFA 死了的算法。</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SPFA-%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">SPFA 的基本步骤</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%8B%E7%8E%A9%E4%B8%80%E4%B8%8B%E6%A0%B7%E4%BE%8B\"><span class=\"toc-text\">手玩一下样例</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%94%BE%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">放代码</span></a></li></ol>","author":{"name":"CodeNebula","slug":"blog-author","avatar":"https://cdn.luogu.com.cn/upload/image_hosting/dsfhfazq.png","link":"/","description":"Take a tour of 『CodeNebula』| 在『代码星云』里遨游。","socials":{"github":"https://github.com/zhangyimin12345","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"C++队列","uid":"f41d11d3971f5aeb705f172704023e46","slug":"C++队列","date":"2025-05-08T16:00:00.000Z","updated":"2025-05-26T12:53:22.000Z","comments":true,"path":"api/articles/C++队列.json","keywords":null,"cover":"https://cdn.luogu.com.cn/upload/image_hosting/fv11znvo.png","text":"本文介绍了与C++队列相关的内容...","permalink":"/post/C++队列","photos":[],"count_time":{"symbolsCount":827,"symbolsTime":"1 mins."},"categories":[{"name":"C++","slug":"C","count":6,"path":"api/categories/C.json"}],"tags":[{"name":"OI","slug":"OI","count":7,"path":"api/tags/OI.json"},{"name":"STL","slug":"STL","count":2,"path":"api/tags/STL.json"}],"author":{"name":"CodeNebula","slug":"blog-author","avatar":"https://cdn.luogu.com.cn/upload/image_hosting/dsfhfazq.png","link":"/","description":"Take a tour of 『CodeNebula』| 在『代码星云』里遨游。","socials":{"github":"https://github.com/zhangyimin12345","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"C++质数相关","uid":"a6b94d3de8f1fc6031ddcd36a585105b","slug":"C++质数相关","date":"2025-05-05T16:00:00.000Z","updated":"2025-05-26T12:54:02.000Z","comments":true,"path":"api/articles/C++质数相关.json","keywords":null,"cover":"https://cdn.luogu.com.cn/upload/image_hosting/fv11znvo.png","text":"1.判断质数1.单一判断用作判断次数不多时使用。 bool is_prime(int x) { if(x <= 1) { return 0; } for(int...","permalink":"/post/C++质数相关","photos":[],"count_time":{"symbolsCount":847,"symbolsTime":"1 mins."},"categories":[{"name":"C++","slug":"C","count":6,"path":"api/categories/C.json"}],"tags":[{"name":"OI","slug":"OI","count":7,"path":"api/tags/OI.json"},{"name":"语法","slug":"语法","count":4,"path":"api/tags/语法.json"}],"author":{"name":"CodeNebula","slug":"blog-author","avatar":"https://cdn.luogu.com.cn/upload/image_hosting/dsfhfazq.png","link":"/","description":"Take a tour of 『CodeNebula』| 在『代码星云』里遨游。","socials":{"github":"https://github.com/zhangyimin12345","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}