[{"id":"4045c99105864c8ba1bdaa2fa94195ce","title":"Hexo Aurora 主题美化、添加复制按钮","content":"Aurora 主题是一个非常美观的主题（至少我这么认为）。但还是存在一些不足，比如没复制按钮（虽然说后面会加），以及时好时坏的代码块，本文将处理这些问题。\n添加代码复制按钮在 injects 字段添加，有两种，下面这种是文字型：\ninjects:\n  scripts:\n    - \"&#x3C;script>\\ndocument.addEventListener(\\\"DOMContentLoaded\\\", function () &#123;\\n  setInterval(()=>&#123;document.querySelectorAll('pre code').forEach(function (codeElement) &#123;if (codeElement.classList.contains(\\\"cpcded\\\"))return;codeElement.classList.add(\\\"cpcded\\\");\\n    const preBlock = codeElement.parentElement;\\n    const button = document.createElement('button');\\n    button.className = 'copy-btn';\\n    button.textContent = '复制';\\n\\n    button.addEventListener('click', async () => &#123;\\n      const code = codeElement.textContent;\\n      try &#123;\\n        await navigator.clipboard.writeText(code);\\n        button.textContent = '已复制';\\n        setTimeout(() => &#123; button.textContent = '复制'; &#125;, 2000);\\n      &#125; catch (err) &#123;\\n        alert('复制失败：' + err);\\n      &#125;\\n    &#125;);\\n\\n    // 设置容器为相对定位以便按钮定位\\n    preBlock.style.position = 'relative';\\n    preBlock.appendChild(button);\\n  &#125;);&#125;,2000);\\n&#125;);\\n&#x3C;/script>\"\n  css:\n    - \"&#x3C;style>.copy-btn &#123;\\n  position: absolute;\\n  top: 8px;\\n  right: 12px;\\n  background-color: rgba(0, 0, 0, 0.6);\\n  color: #fff;\\n  border: none;\\n  padding: 4px 10px;\\n  font-size: 13px;\\n  cursor: pointer;\\n  border-radius: 4px;\\n  transition: background 0.3s ease;\\n&#125;\\n\\n.copy-btn:hover &#123;\\n  background-color: rgba(0, 0, 0, 0.85);\\n&#125;pre code&#123;width: 100%;background-color: var(--background-primary) !important;&#125;pre&#123;border-radius: .3rem;padding: 10px;background-color: var(--background-primary) !important;&#125;&#x3C;/style>\"\n\n（文字型 by wbw121124，可以去友链串门他的博客！）\n这种是 font-awesome 图标型：\ninjects:\n  scripts:\n    - &#x3C;script src=\"https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.7.2/js/all.min.js\">&#x3C;/script>\n    - \"&#x3C;script>\\n  document.addEventListener(\\\"DOMContentLoaded\\\", function () &#123;\\n    setInterval(() => &#123;\\n      document.querySelectorAll('pre code').forEach(function (codeElement) &#123;\\n        if (codeElement.classList.contains(\\\"cpcded\\\")) return;\\n        codeElement.classList.add(\\\"cpcded\\\");\\n        const preBlock = codeElement.parentElement;\\n        const button = document.createElement('button');\\n        button.className = 'copy-btn';\\n        const svg = document.createElementNS(\\\"http://www.w3.org/2000/svg\\\", \\\"svg\\\");\\n        svg.setAttribute(\\\"viewBox\\\", \\\"0 0 448 512\\\");\\n        svg.setAttribute(\\\"width\\\", \\\"16\\\");\\n        svg.setAttribute(\\\"height\\\", \\\"16\\\");\\n        svg.setAttribute(\\\"fill\\\", \\\"currentColor\\\");\\n        svg.innerHTML = `\\n          &#x3C;path fill=\\\"currentColor\\\"\\n            d=\\\"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z\\\">\\n          &#x3C;/path>\\n        `;\\n        button.appendChild(svg);\\n        button.addEventListener('click', async () => &#123;\\n          const code = codeElement.textContent;\\n          try &#123;\\n            await navigator.clipboard.writeText(code);\\n            svg.innerHTML = `\\n              &#x3C;path fill=\\\"currentColor\\\"\\n                d=\\\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\\\">\\n              &#x3C;/path>\\n            `;\\n            setTimeout(() => &#123;\\n              svg.innerHTML = `\\n                &#x3C;path fill=\\\"currentColor\\\"\\n                  d=\\\"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z\\\">\\n                &#x3C;/path>\\n              `;\\n            &#125;, 3000);\\n          &#125; catch (err) &#123;\\n            alert('复制失败：' + err);\\n          &#125;\\n        &#125;);\\n        preBlock.style.position = 'relative';\\n        preBlock.appendChild(button);\\n      &#125;);\\n    &#125;, 2000);\\n  &#125;);\\n&#x3C;/script>\"\n  css:\n\t- \"&#x3C;style>.copy-btn &#123;\\n  position: absolute;\\n  top: 8px;\\n  right: 12px;\\n  background-color: var(--background-primary);\\n  color: var(--text-title-h1);\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\\n  border: none;\\n  padding: 4px 10px;\\n  font-size: 13px;\\n  cursor: pointer;\\n  border-radius: 4px;\\n  transition: background 0.3s ease;\\n&#125;\\n\\n.copy-btn:hover &#123;\\n  background-color: var(--background-secondary-alt);\\n  color: #fff&#125;&#x3C;/style>\"\n    - &#x3C;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.7.2/css/fontawesome.min.css\">\n\n美化代码块有时 Shiki 的配置会失效，有时代码块会变成方形，代码紧贴边缘，这些代码就是用来修复代码块的。\n- \"&#x3C;style>pre code&#123;width: 100%;background-color: var(--background-primary) !important;&#125;pre&#123;border-radius: .3rem;padding: 10px;background-color: var(--background-primary) !important;&#125;&#x3C;/style>\"\n\n切换字体推荐 霞鹜文楷，在网上搜到优点是：\n\n\n\n\n\n\n\n\n\n霞鹜文楷字形特点\n\n字形兼有仿宋和楷体的特点，既有古韵风格，又具有现代感，非常大气有档次\n字重比 Klee 更细，在电子屏幕上的阅读感受尤为舒适\n所有字体均为 等宽字体，作为设计和排版用途时效果更佳\n\n(来源 霞鹜文楷 - 阅读舒适、字形漂亮且免费开源的楷体艺术字，可免费商用 - 知乎)\n想看预览？本博客就是用的 霞鹜文楷！非常符合博主审美！\n废话不多说，还是 injects 字段添加：\ninjects:\n  css:\n    - &#x3C;link rel=\"stylesheet\" href=\"https://cdn.bootcdn.net/ajax/libs/lxgw-wenkai-screen-webfont/1.7.0/style.min.css\">\n    - \"&#x3C;style>*&#123;font-family: LXGW WenKai Screen;&#125;&#x3C;/style>\"\n\n其中 *&#123;font-family: LXGW WenKai Screen;&#125; 的 * 可根据情况自行修改。\n文字选中样式还是 injects 字段添加：\ninjects:\n  css:\n    - \"&#x3C;style>::selection &#123;\\n  background: #00000000;\\n  color: #f00;\\n&#125;\\n\\n.icon &#123;\\n  vertical-align: -0.15em;\\n  fill: currentColor;\\n  overflow: hidden;\\n&#125;\\n\\npre::selection,\\npre ::selection &#123;\\n  #00000000;\\n&#125;\\n&#x3C;/style>\"\n\n颜色可自行修改。\n打字冒火花 &amp; 鼠标移动有小星星injects:\n  scripts:\n    - &#x3C;script src=\"https://fastly.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/star.min.js\">&#x3C;/script>\n    - &#x3C;script src=\"https://static.kevinchu.top/blog/assets/js/typing-effect.js\">&#x3C;/script>\n\n结其实还有许多样式问题，不过懒得改（但偶尔看着不舒服了就会改，第一时间放这里），欢迎评论留言，将会添加到本文并附上名字！\n话说网上没一篇美化这个主题的吗？或许是它不够知名趴。\n\n\n","slug":"Hexo Aurora 主题美化、添加复制按钮","date":"2025-05-27T09:00:00.000Z","categories_index":"Hexo-Aurora","tags_index":"Hexo,Hexo-Aurora,博客相关","author_index":"CodeNebula"},{"id":"64e4ef3acf7e00ca626d42f712f391c1","title":"Hexo博客搭建","content":"一、准备工作\n首先准备一个 Github 账号（用户名.github.io留空），没有就去注册一个新账号。\n\n安装 Git，链接: https://git-scm.com/downloads。\n\n安装 Node.js ，官网链接： Node.js — Download Node.js\n\n\n安装这两个，一般都会自动配置环境，配置这个目的是可以在任何路径下使用 Git 和 Node.js，如果没有配置环境变量，可以去配置一下。\n接下来，测试安装是否成功。\n打开终端（Win + R，输入 cmd ，再回车），输入 node -v 如果返回了 x.x.x，说明安装成功。再输入 npm -v 如果返回了 x.x.x，说明安装成功。\n这里会有一个 npm 没有 Node.js 却有的解决方案，还没写。\n接着，打开 Git Bash，配置 Git 用户信息。先输入：\ngit config --global user.name \"&#x3C;YourName>\"\n\n其中 &lt;YourName&gt; 就是你的 Github 用户名。再输入：\ngit config --global user.name \"&#x3C;YourEmail>\"\n\n其中 &lt;YourEmail&gt; 就是你的 Github 绑定的邮箱。\n\n\n\n\n\n\n\n注意\n注意：带引号！\n\n二、开始！\n\n\n\n\n\n\n注意\n注：全局使用 Git Bash。\n\n\n全局安装 Hexo   npm i -g hexo-cli\n需要一点时间，莫急。\n\n创建博客项目先创建一个文件夹（或直接用磁盘），右键文件夹，找 Open Git Bash Here ，没有请检查 显示更多选项 或安装情况。\n再输入：\n   hexo init myblog\n   cd myblog\n   npm install\n\n\n创建文件夹并初始化，名字自拟，推荐用这个名字，后面有问题方便查错\n索引至文件夹\n安装依赖\n\n\n本地预览输入：\n   hexo s\n\n如果无法访问，尝试切换端口。\n   hexo s -p 5000\n\n其中的 5000 可以切换，默认 4000。\n此时就可以看到 Hexo 自带主题了。\n\n部署\n修改文件 修改 ~/myblog/_config.yml，在底部放上如下代码：\n    \tdeploy:\n       type: git\n       repo: git@github.com:&#x3C;YourName>/&#x3C;YourName>.github.io.git\n       branch: main\n :::warning 注意 注意：注意空行与缩进，还有冒号与内容间的空格。 :::\n\n安装部署插件在 Git Bash 里输入：\n      npm i hexo-deployer-git --save\n\n需要一点时间，莫急。等出现 &#96;&#96;\n\n部署\n创建仓库在 Github 上创建一个名为 &lt;YourName&gt;.github.io 的仓库。\n\n部署在 Git Bash 里输入：\n         hexo clean &#x26;&#x26; hexo g -d\n\n需要一点时间，莫急。\n这时有些人就会出现一些问题了，但我还没开始写。\n\n\n\n\n\n\n三、进一步操作详见 为Hexo添加数学公式渲染 &amp; Hexo主题安装 &amp; Hexo+Fluid美化教程。\n\n\n","slug":"Hexo博客搭建","date":"2025-05-26T08:00:00.000Z","categories_index":"Hexo","tags_index":"Hexo,博客相关","author_index":"CodeNebula"},{"id":"05efe4b196b4e4c8c2fa7dfb370a3b6b","title":"C++高精度模板","content":"加\n\n\n\n\n\n\n注意\n注意看位数！不支持负数！\n\nstring jia(string a, string b)\n&#123;\n\tstring c;\n\tint x[1005] = &#123;&#125; , y[1005] = &#123;&#125; , z[1005] = &#123;&#125;;\n\tfor(int i = a.size() - 1 , j = 0 ; i >= 0 ; i-- , j++)&#123;\n\t\tx[i] = a[j] - '0';\n\t&#125;\n\tfor(int i = b.size() - 1 , j = 0 ; i >= 0 ; i-- , j++)&#123;\n\t\ty[i] = b[j] - '0';\n\t&#125;\n\tint len = max(a.size() , b.size());\n\tfor(int i = 0 ; i &#x3C; len ; i++)&#123;\n\t\tz[i] += x[i] + y[i];\n\t\tz[i + 1] += z[i] / 10;\n\t\tz[i] %= 10;\n\t&#125;\n\tif(z[len] > 0)len++;\n\tfor(int i = len - 1 ; i >= 0 ; i--)&#123;\n\t\tc += char(z[i] + '0');\n\t&#125;\n\treturn c;\n&#125;\n\n减\n\n\n\n\n\n\n注意\n注意看位数！不支持负数！\n\nstring jian(string a, string b)\n&#123;\n\tstring c;\n\tint x[1005] = &#123;&#125; , y[1005] = &#123;&#125; , z[1005] = &#123;&#125;;\n\tfor(int i = a.size() - 1 , j = 0 ; i >= 0 ; i-- , j++)&#123;\n\t\tx[i] = a[j] - '0';\n\t&#125;\n\tfor(int i = b.size() - 1 , j = 0 ; i >= 0 ; i-- , j++)&#123;\n\t\ty[i] = b[j] - '0';\n\t&#125;\n\tint len = max(a.size() , b.size());\n\tfor(int i = 0 ; i &#x3C; len ; i++)&#123;\n\t\tz[i] += x[i] - y[i];\n\t\tif(z[i] &#x3C; 0)&#123;\n\t\t\tz[i + 1]--;\n\t\t\tz[i] += 10;\n\t\t&#125;\n\t&#125;\n\tfor(int i = len - 1 ; i >= 0 ; i--)&#123;\n\t\tc += char(z[i] + '0');\n\t&#125;\n\tint pos = 0;\n\twhile(pos &#x3C; c.size() - 1 &#x26;&#x26; c[pos] == '0')pos++;\n\treturn c.substr(pos);\n&#125;\n\n乘\n\n\n\n\n\n\n注意\n注意看位数！不支持负数！\n\nstring cheng(string x, string y)\n&#123;\n\tif(x == \"0\" || y == \"0\")return \"0\";\n\tstring c;\n\tint a[1005] = &#123;&#125; , b[1005] = &#123;&#125; , z[2005] = &#123;&#125;;\n\tfor(int i = x.size() - 1 , j = 1 ; i >= 0 , j &#x3C;= x.size() ; i-- , j++)&#123;\n\t\ta[j] = x[i] - '0';\n\t&#125;\n\tfor(int i = y.size() - 1 , j = 1 ; i >= 0 , j &#x3C;= y.size() ; i-- , j++)&#123;\n\t\tb[j] = y[i] - '0';\n\t&#125;\n\tfor(int i = 1 ; i &#x3C;= x.size() ; i++)&#123;\n\t\tfor(int j = 1 ; j &#x3C;= y.size() ; j++)&#123;\n\t\t\tz[i + j - 1] += a[i] * b[j];\n\t\t\tz[i + j] += z[i + j - 1] / 10;\n\t\t\tz[i + j - 1] %= 10;\n\t\t&#125;\n\t&#125;\n\tint len = x.size() + y.size();\n\tif(z[len] == 0)len--;\n\tfor(int i = len ; i >= 1 ; i--)&#123;\n\t\tc += char(z[i] + '0');\n\t&#125;\n\tint pos = 0;\n\twhile(pos &#x3C; c.size() - 1 &#x26;&#x26; c[pos] == '0')pos++;\n\treturn c.substr(pos);\n&#125;\n\n高精除单精\n\n\n\n\n\n\n注意\n不支持余数与小数结果！不支持负数！\n\nstring chu(string a , long long b)&#123;\n\tlong long sum = 0;\n\tstring ans;\n\tfor(int i = 0 ; i &#x3C; a.size() ; i++)&#123;\n\t\tsum = sum * 10 + (a[i] - '0');\n\t\tans += to_string(sum / b);\n\t\tsum %= b;\n\t&#125;\n\tint pos = 0;\n\twhile(ans[pos] == '0' &#x26;&#x26; pos &#x3C; ans.size())pos++;\n\treturn ans.substr(pos);\n&#125;\n\n高精除高精\n\n\n\n\n\n\n注意\n注意看位数！不支持小数结果！不支持负数！\n\nstring sum;\nstring jian(string a, string b)\n&#123;\n\tstring c;\n\tint x[1005] = &#123;&#125; , y[1005] = &#123;&#125; , z[1005] = &#123;&#125;;\n\tfor(int i = a.size() - 1 , j = 0 ; i >= 0 ; i-- , j++)&#123;\n\t\tx[i] = a[j] - '0';\n\t&#125;\n\tfor(int i = b.size() - 1 , j = 0 ; i >= 0 ; i-- , j++)&#123;\n\t\ty[i] = b[j] - '0';\n\t&#125;\n\tint len = max(a.size() , b.size());\n\tfor(int i = 0 ; i &#x3C; len ; i++)&#123;\n\t\tz[i] += x[i] - y[i];\n\t\tif(z[i] &#x3C; 0)&#123;\n\t\t\tz[i + 1]--;\n\t\t\tz[i] += 10;\n\t\t&#125;\n\t&#125;\n\tfor(int i = len - 1 ; i >= 0 ; i--)&#123;\n\t\tc += char(z[i] + '0');\n\t&#125;\n\tint pos = 0;\n\twhile(pos &#x3C; c.size() - 1 &#x26;&#x26; c[pos] == '0')pos++;\n\treturn c.substr(pos);\n&#125;\nbool cmp(string x , string y)&#123;\n\tif(x.size() != y.size())\n\t\treturn x.size() &#x3C; y.size();\n\treturn x &#x3C; y;\n&#125;\nstring chu(string a , string b)&#123;\n\tstring ans;\n\tfor(int i = 0 ; i &#x3C; a.size() ; i++)&#123;\n\t\tif(sum == \"0\") sum = \"\";\n\t\tsum += a[i];\n\t\tint cnt = 0;\n\t\twhile(!cmp(sum , b))&#123;\n\t\t\tsum = jian(sum , b);\n\t\t\tcnt++;\n\t\t&#125;\n\t\tans += to_string(cnt);\n\t&#125;\n\tint pos = 0;\n\twhile(ans[pos] == '0' &#x26;&#x26; pos &#x3C; ans.size() - 1)pos++;\n\treturn ans.substr(pos);\n&#125;\n\n其中 sumsumsum 是余数。\n高精小数除法\n\n\n\n\n\n\n注意\n除数与被除数不支持高精！不支持负数！\n\n#include&#x3C;bits/stdc++.h>\nusing namespace std;\nint n , m , k;\nstring ans;\nint main()&#123;\n\tcin >> n >> m >> k;\n\tif(n &#x3C; 0 &#x26;&#x26; m > 0 || m &#x3C; 0 &#x26;&#x26; n > 0)&#123;\n\t\tans += \"-\";\n\t\t\n\t&#125;\n\tn = abs(n);\n\tm = abs(m);\n\tans += to_string(n / m);\n\tans = ans + \".\";\n\tint y = n % m;\n\tfor(int i = 1 ; i &#x3C;= k ; i++)&#123;\n\t\ty *= 10;\n\t\tans += to_string(y / m);\n\t\ty %= m;\n\t&#125;\n\tint pos = ans.size() - 1;\n\twhile(ans[pos] == '0')pos--;\n\tif(ans[pos] == '.')pos--;\n\tans = ans.substr(0 , pos + 1);\n\tcout &#x3C;&#x3C; ans;\n\treturn 0;\n&#125;\n\n\n\n","slug":"C++高精度模板","date":"2025-05-11T16:00:00.000Z","categories_index":"C++","tags_index":"OI,语法","author_index":"CodeNebula"},{"id":"277b7fd9e2a51ab4784dda4fb08964d7","title":"C++矩阵变换","content":"上下翻转#include &#x3C;iostream>\nusing namespace std;\n\nint a[40][40];\nint b[40][40];\nint n , m;\n\nvoid zhuan()\n&#123;\n    for(int i = 1 ; i &#x3C;= n ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= m ; j++)&#123;\n    \t\tb[i][j] = a[n + 1 - i][j];\n    \t&#125;\n    &#125;\n    for(int i = 1 ; i &#x3C;= n ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= m ; j++)&#123;\n    \t\ta[i][j] = b[i][j];\n    \t&#125;\n    &#125;\n&#125;\n\nint main()\n&#123;\n    cin >> n >> m;\n\tfor(int i = 1 ; i &#x3C;= n ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= m ; j++)&#123;\n    \t\tcin >> a[i][j];\n    \t&#125;\n    &#125;\n    zhuan();\n    for(int i = 1 ; i &#x3C;= n ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= m ; j++)&#123;\n    \t\tcout &#x3C;&#x3C; a[i][j] &#x3C;&#x3C; \" \";\n    \t&#125;\n    \tcout &#x3C;&#x3C; endl;\n    &#125;\n    return 0;\n&#125;\n\n左右翻转#include &#x3C;iostream>\nusing namespace std;\n\nint a[40][40];\nint b[40][40];\nint n , m;\n\nvoid zhuan()\n&#123;\n    for(int i = 1 ; i &#x3C;= n ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= m ; j++)&#123;\n    \t\tb[i][j] = a[i][m + 1 - j];\n    \t&#125;\n    &#125;\n    for(int i = 1 ; i &#x3C;= n ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= m ; j++)&#123;\n    \t\ta[i][j] = b[i][j];\n    \t&#125;\n    &#125;\n&#125;\n\nint main()\n&#123;\n    cin >> n >> m;\n\tfor(int i = 1 ; i &#x3C;= n ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= m ; j++)&#123;\n    \t\tcin >> a[i][j];\n    \t&#125;\n    &#125;\n    zhuan();\n    for(int i = 1 ; i &#x3C;= n ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= m ; j++)&#123;\n    \t\tcout &#x3C;&#x3C; a[i][j] &#x3C;&#x3C; \" \";\n    \t&#125;\n    \tcout &#x3C;&#x3C; endl;\n    &#125;\n    return 0;\n&#125;\n\n右转 90 度#include &#x3C;bits/stdc++.h>\nusing namespace std;\n\nint a[40][40];\nint b[40][40];\nint n , m;\n\nvoid zhuan()\n&#123;\n    for(int i = 1 ; i &#x3C;= m ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= n ; j++)&#123;\n    \t\tb[i][j] = a[n + 1 - j][i];\n    \t&#125;\n    &#125;\n    for(int i = 1 ; i &#x3C;= m ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= n ; j++)&#123;\n    \t\ta[i][j] = b[i][j];\n    \t&#125;\n    &#125;\n&#125;\n\nint main()\n&#123;\n    cin >> n >> m;\n\tfor(int i = 1 ; i &#x3C;= n ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= m ; j++)&#123;\n    \t\tcin >> a[i][j];\n    \t&#125;\n    &#125;\n    zhuan();\n    swap(n , m);\n    for(int i = 1 ; i &#x3C;= n ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= m ; j++)&#123;\n    \t\tcout &#x3C;&#x3C; a[i][j] &#x3C;&#x3C; \" \";\n    \t&#125;\n    \tcout &#x3C;&#x3C; endl;\n    &#125;\n    return 0;\n&#125;\n\n左转 90 度#include &#x3C;bits/stdc++.h>\nusing namespace std;\n\nint a[40][40];\nint b[40][40];\nint n , m;\n\nvoid zhuan()\n&#123;\n    for(int i = 1 ; i &#x3C;= m ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= n ; j++)&#123;\n    \t\tb[i][j] = a[j][m + 1 - i];\n    \t&#125;\n    &#125;\n    for(int i = 1 ; i &#x3C;= m ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= n ; j++)&#123;\n    \t\ta[i][j] = b[i][j];\n    \t&#125;\n    &#125;\n&#125;\n\nint main()\n&#123;\n    cin >> n >> m;\n\tfor(int i = 1 ; i &#x3C;= n ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= m ; j++)&#123;\n    \t\tcin >> a[i][j];\n    \t&#125;\n    &#125;\n    zhuan();\n    swap(n , m);\n    for(int i = 1 ; i &#x3C;= n ; i++)&#123;\n    \tfor(int j = 1 ; j &#x3C;= m ; j++)&#123;\n    \t\tcout &#x3C;&#x3C; a[i][j] &#x3C;&#x3C; \" \";\n    \t&#125;\n    \tcout &#x3C;&#x3C; endl;\n    &#125;\n    return 0;\n&#125;\n\n\n\n","slug":"C++矩阵变换","date":"2025-05-11T16:00:00.000Z","categories_index":"C++","tags_index":"OI,语法","author_index":"CodeNebula"},{"id":"fcd45286c67fb12e90ca4d87dc28e534","title":"为Hexo添加数学公式渲染","content":"首先，删除渲染器，太菜了。\nnpm un hexo-renderer-marked --save\n\n接下来就看你用什么渲染方式了。\n\n用 mathjax：（不推荐）\n  npm i hexo-renderer-kramed --save\n\n用 Katex：（强烈推荐）\n  npm i hexo-renderer-markdown-it-katex --save\n\n\n\n\n\n\n\n\nUpdate 2025&#x2F;5&#x2F;26 注意\n据说 mathjax 很慢，尽量使用 Katex。\n\n\n那个 @upupming/hexo-renderer-markdown-it-plus 不好用，hexo-renderer-markdown-it-plus  已经停止维护了。\n\n\n\n\n\n\n\nUpdate 2025&#x2F;5&#x2F;26 危险！！！\n如果你用的不是 hljs 高亮，你就不能用这种方法！替代方法请看下面。\n\n\nUpdate 2025&#x2F;5&#x2F;26 新方法，适合不使用 hljs 的博主首先：\n根据需要选择：\nnpm i hexo-filter-katex\n\nnpm i hexo-filter-mathjax\n\n然后，在 _config.yml 添加如下字段：\nmath:\n  every_page: true # 是否每个页面都渲染，bool\n\n  mathjax:\n    enable: false # 是否启用\n    # 三种值: none | ams | all\n    tags: none\n\n  katex:\n    enable: true # 是否启用\n    # 复制 Katex 源码，可以去 https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex 看\n    # 但 Aurora 主题好像用不了\n    copy_tex: true\n\n再：\nhexo cl &#x26;&#x26; hexo g\n\n\n","slug":"为Hexo添加数学公式渲染","date":"2025-05-09T08:00:00.000Z","categories_index":"Hexo","tags_index":"Hexo,博客相关","author_index":"CodeNebula"},{"id":"5326e1446e1cb298bfb0d2f63b3a53dc","title":"Hexo主题安装","content":"Hexo 自带的主题丑死了，可以使用其他的主题，这里推荐 Beautify 、 Fluid 、Aurora 和 Next。\n因为未试过，所以只有 Fluid 和 Aurora 的安装教程，但其余的可以看主题文档或效仿这两个主题，实在不行可以查或者问 AI。\nFluid推荐直接主题覆盖，方便修改，请保证 Hexo 版本 5.0.0 以上。\n首先：\nnpm install --save hexo-theme-fluid\n\n然后在博客目录下创建 _config.fluid.yml，将主题的 _config.yml 的内容复制过去。\n如果打不开，尝试用 bgithub.xyz 访问，实在不行复制下面的。\n\nUpdate 2025&#x2F;5&#x2F;27 修改笔误\n修改错误\n如果打不开，尝试用 bgithub.com 访问，实在不行复制下面的。\n为\n如果打不开，尝试用 bgithub.xyz 访问，实在不行复制下面的。\n\n\n\n_config.yml\n#---------------------------\n# Hexo Theme Fluid\n# Author: Fluid-dev\n# Github: https://github.com/fluid-dev/hexo-theme-fluid\n#\n# 配置指南: https://hexo.fluid-dev.com/docs/guide/\n# 你可以从指南中获得更详细的说明\n#\n# Guide: https://hexo.fluid-dev.com/docs/en/guide/\n# You can get more detailed help from the guide\n#---------------------------\n\n\n#---------------------------\n# 全局\n# Global\n#---------------------------\n\n# 用于浏览器标签的图标\n# Icon for browser tab\nfavicon: /img/fluid.png\n\n# 用于苹果设备的图标\n# Icon for Apple touch\napple_touch_icon: /img/fluid.png\n\n# 浏览器标签页中的标题分隔符，效果：文章名 - 站点名\n# Title separator in browser tab, eg: article - site\ntab_title_separator: \" - \"\n\n# 强制所有链接升级为 HTTPS（适用于图片等资源出现 HTTP 混入报错）\n# Force all links to be HTTPS (applicable to HTTP mixed error)\nforce_https: false\n\n# 代码块的增强配置\n# Enhancements to code blocks\ncode:\n  # 是否开启复制代码的按钮\n  # Enable copy code button\n  copy_btn: true\n\n  # 代码语言\n  # Code language\n  language:\n    enable: true\n    default: \"TEXT\"\n\n  # 代码高亮\n  # Code highlight\n  highlight:\n    enable: true\n\n    # 代码块是否显示行号\n    # If true, the code block display line numbers\n    line_number: true\n\n    # 实现高亮的库，对应下面的设置\n    # Highlight library\n    # Options: highlightjs | prismjs\n    lib: \"highlightjs\"\n\n    highlightjs:\n      # 在链接中挑选 style 填入\n      # Select a style in the link\n      # See: https://highlightjs.org/demo/\n      style: \"github gist\"\n      style_dark: \"dark\"\n\n    prismjs:\n      # 在下方链接页面右侧的圆形按钮挑选 style 填入，也可以直接填入 css 链接\n      # Select the style button on the right side of the link page, you can also set the CSS link\n      # See: https://prismjs.com/\n      style: \"default\"\n      style_dark: \"tomorrow night\"\n\n      # 设为 true 高亮将本地静态生成（但只支持部分 prismjs 插件），设为 false 高亮将在浏览器通过 js 生成\n      # If true, it will be generated locally (but some prismjs plugins are not supported). If false, it will be generated via JS in the browser\n      preprocess: true\n\n# 一些好玩的功能\n# Some fun features\nfun_features:\n  # 为 subtitle 添加打字机效果\n  # Typing animation for subtitle\n  typing:\n    enable: true\n\n    # 打印速度，数字越大越慢\n    # Typing speed, the larger the number, the slower\n    typeSpeed: 70\n\n    # 游标字符\n    # Cursor character\n    cursorChar: \"_\"\n\n    # 是否循环播放效果\n    # If true, loop animation\n    loop: false\n\n    # 在指定页面开启，不填则在所有页面开启\n    # Enable in specified page, all pages by default\n    # Options: home | post | tag | category | about | links | page | 404\n    scope: []\n\n  # 为文章内容中的标题添加锚图标\n  # Add an anchor icon to the title on the post page\n  anchorjs:\n    enable: true\n    element: h1,h2,h3,h4,h5,h6\n    # Options: left | right\n    placement: left\n\n    # Options: hover | always\n    visible: hover\n\n    # Options: § | # | ❡\n    icon: \"\"\n\n  # 加载进度条\n  # Progress bar when loading\n  progressbar:\n    enable: true\n    height_px: 3\n    color: \"#29d\"\n    # See: https://github.com/rstacruz/nprogress\n    options: &#123; showSpinner: false, trickleSpeed: 100 &#125;\n\n# 主题暗色模式，开启后菜单中会出现切换按钮，用户浏览器会存储切换选项，并且会遵循 prefers-color-scheme 自动切换\n# Theme dark mode. If enable, a switch button will appear on the menu, each of the visitor's browser will store his switch option\ndark_mode:\n  enable: true\n  # 默认的选项（当用户手动切换后则不再按照默认模式），选择 `auto` 会优先遵循 prefers-color-scheme，其次按用户本地时间 18 点到次日 6 点之间进入暗色模式\n  # Default option (when the visitor switches manually, the default mode is no longer followed), choosing `auto` will give priority to prefers-color-scheme, and then enter the dark mode from 18:00 to 6:00 in the visitor's local time\n  # Options: auto | light | dark\n  default: auto\n\n# 主题颜色配置，其他不生效的地方请使用自定义 css 解决，配色可以在下方链接中获得启发\n# Theme color, please use custom CSS to solve other colors, color schema can be inspired by the links below\n# See: https://www.webdesignrankings.com/resources/lolcolors/\ncolor:\n  # body 背景色\n  # Color of body background\n  body_bg_color: \"#eee\"\n  # 暗色模式下的 body 背景色，下同\n  # Color in dark mode, the same below\n  body_bg_color_dark: \"#181c27\"\n\n  # 顶部菜单背景色\n  # Color of navigation bar background\n  navbar_bg_color: \"#2f4154\"\n  navbar_bg_color_dark: \"#1f3144\"\n\n  # 顶部菜单字体色\n  # Color of navigation bar text\n  navbar_text_color: \"#fff\"\n  navbar_text_color_dark: \"#d0d0d0\"\n\n  # 副标题字体色\n  # Color of subtitle text\n  subtitle_color: \"#fff\"\n  subtitle_color_dark: \"#d0d0d0\"\n\n  # 全局字体色\n  # Color of global text\n  text_color: \"#3c4858\"\n  text_color_dark: \"#c4c6c9\"\n\n  # 全局次级字体色（摘要、简介等位置）\n  # Color of global secondary text (excerpt, introduction, etc.)\n  sec_text_color: \"#718096\"\n  sec_text_color_dark: \"#a7a9ad\"\n\n  # 主面板背景色\n  # Color of main board\n  board_color: \"#fff\"\n  board_color_dark: \"#252d38\"\n\n  # 文章正文字体色\n  # Color of post text\n  post_text_color: \"#2c3e50\"\n  post_text_color_dark: \"#c4c6c9\"\n\n  # 文章正文字体色（h1 h2 h3...）\n  # Color of Article heading (h1 h2 h3...)\n  post_heading_color: \"#1a202c\"\n  post_heading_color_dark: \"#c4c6c9\"\n\n  # 文章超链接字体色\n  # Color of post link\n  post_link_color: \"#0366d6\"\n  post_link_color_dark: \"#1589e9\"\n\n  # 超链接悬浮时字体色\n  # Color of link when hovering\n  link_hover_color: \"#30a9de\"\n  link_hover_color_dark: \"#30a9de\"\n\n  # 超链接悬浮背景色\n  # Color of link background when hovering\n  link_hover_bg_color: \"#f8f9fa\"\n  link_hover_bg_color_dark: \"#364151\"\n\n  # 分隔线和表格边线的颜色\n  # Color of horizontal rule and table border\n  line_color: \"#eaecef\"\n  line_color_dark: \"#435266\"\n\n  # 滚动条颜色\n  # Color of scrollbar\n  scrollbar_color: \"#c4c6c9\"\n  scrollbar_color_dark: \"#687582\"\n  # 滚动条悬浮颜色\n  # Color of scrollbar when hovering\n  scrollbar_hover_color: \"#a6a6a6\"\n  scrollbar_hover_color_dark: \"#9da8b3\"\n\n  # 按钮背景色\n  # Color of button\n  button_bg_color: \"transparent\"\n  button_bg_color_dark: \"transparent\"\n  # 按钮悬浮背景色\n  # Color of button when hovering\n  button_hover_bg_color: \"#f2f3f5\"\n  button_hover_bg_color_dark: \"#46647e\"\n\n# 主题字体配置\n# Font\nfont:\n  font_size: 16px\n  font_family:\n  letter_spacing: 0.02em\n  code_font_size: 85%\n\n# 指定自定义 .js 文件路径，支持列表；路径是相对 source 目录，如 /js/custom.js 对应存放目录 source/js/custom.js\n# Specify the path of your custom js file, support list. The path is relative to the source directory, such as `/js/custom.js` corresponding to the directory `source/js/custom.js`\ncustom_js:\n\n# 指定自定义 .css 文件路径，用法和 custom_js 相同\n# The usage is the same as custom_js\ncustom_css:\n\n# 网页访问统计\n# Analysis of website visitors\nweb_analytics:\n  enable: false\n\n  # 遵循访客浏览器\"请勿追踪\"的设置，如果开启则不统计其访问\n  # Follow the \"Do Not Track\" setting of the visitor's browser\n  # See: https://www.w3.org/TR/tracking-dnt/\n  follow_dnt: true\n\n  # 百度统计的 Key，值需要获取下方链接中 `hm.js?` 后边的字符串\n  # Baidu analytics, get the string behind `hm.js?`\n  # See: https://tongji.baidu.com/sc-web/10000033910/home/site/getjs?siteId=13751376\n  baidu:\n\n  # Google Analytics 4 的媒体资源 ID\n  # Google Analytics 4 MEASUREMENT_ID\n  # See: https://support.google.com/analytics/answer/9744165#zippy=%2Cin-this-article\n  google:\n    measurement_id:\n\n  # 腾讯统计的 H5 App ID，开启高级功能才有cid\n  # Tencent analytics, set APP ID\n  # See: https://mta.qq.com/h5/manage/ctr_app_manage\n  tencent:\n    sid:\n    cid:\n\n  # LeanCloud 计数统计，可用于 PV UV 展示，如果 `web_analytics: enable` 没有开启，PV UV 展示只会查询不会增加\n  # LeanCloud count statistics, which can be used for PV UV display. If `web_analytics: enable` is false, PV UV display will only query and not increase\n  leancloud:\n    app_id:\n    app_key:\n    # REST API 服务器地址，国际版不填\n    # Only the Chinese mainland users need to set\n    server_url:\n    # 统计页面时获取路径的属性\n    # Get the attribute of the page path during statistics\n    path: window.location.pathname\n    # 开启后不统计本地路径( localhost 与 127.0.0.1 )\n    # If true, ignore localhost &#x26; 127.0.0.1\n    ignore_local: false\n\n  # Umami Analytics，仅支持自部署。如果要展示 PV UV 需要填写所有配置项，否则只填写 `src` 和 `website_id` 即可\n  # Umami Analytics, only Self-host support. If you want to display PV UV need to set all config items, otherwise only set 'src' and 'website_id'\n  # See: https://umami.is/docs\n  umami:\n    # umami js 文件地址，需要在 umami 后台创建站点后获取\n    # umami js file url, get after create website in umami\n    src:\n\n    # umami 的 website id，需要在 umami 后台创建站点后获取\n    # umami website id, get after create website in umami\n    website_id:\n\n    # 如果你只想统计特定的域名可以填入此字段，多个域名通过逗号分隔，这可以避免统计 localhost。\n    # If you only want to tracker to specific domains you can fill in this field, multiple domain names are separated by commas, which can avoid tracker localhost\n    domains:\n\n    # 用于统计 PV UV 的开始时间，格式为 \"YYYY-MM-DD\"\n    # statistics on the start time, the format is \"YYYY-MM-DD\"\n    start_time: 2024-01-01\n\n    # 新建一个 umami viewOnly 用户，然后通过 login api 获取该用户 token\n    # create an umami viewOnly user, and then get user token through the login api\n    token:\n\n    # 填写 umami 部署的服务器地址，如 \"https://umami.example.com\"\n    # server url of umami deployment, such as \"https://umami.example.com\"\n    api_server:\n\n# Canonical 用于向 Google 搜索指定规范网址，开启前确保 hexo _config.yml 中配置 `url: http://yourdomain.com`\n# Canonical, to specify a canonical URL for Google Search, need to set up `url: http://yourdomain.com` in hexo _config.yml\n# See: https://support.google.com/webmasters/answer/139066\ncanonical:\n  enable: false\n\n# 对页面中的图片和评论插件进行懒加载处理，可见范围外的元素不会提前加载\n# Lazy loading of images and comment plugin on the page\nlazyload:\n  enable: true\n\n  # 加载时的占位图片\n  # The placeholder image when loading\n  loading_img: /img/loading.gif\n\n  # 开启后懒加载仅在文章页生效，如果自定义页面需要使用，可以在 Front-matter 里指定 `lazyload: true`\n  # If true, only enable lazyload on the post page. For custom pages, you can set 'lazyload: true' in front-matter\n  onlypost: false\n\n  # 触发加载的偏移倍数，基数是视窗高度，可根据部署环境的请求速度调节\n  # The factor of viewport height that triggers loading\n  offset_factor: 2\n\n# 图标库，包含了大量社交类图标，主题依赖的不包含在内，因此可自行修改，详见 https://hexo.fluid-dev.com/docs/icon/\n# Icon library, which includes many social icons, does not include those theme dependent, so your can modify link by yourself. See: https://hexo.fluid-dev.com/docs/en/icon/\niconfont: //at.alicdn.com/t/c/font_1736178_k526ubmyhba.css\n\n\n#---------------------------\n# 页头\n# Header\n#---------------------------\n\n# 导航栏的相关配置\n# Navigation bar\nnavbar:\n  # 导航栏左侧的标题，为空则按 hexo config 中 `title` 显示\n  # The title on the left side of the navigation bar. If empty, it is based on `title` in hexo config\n  blog_title: \"Fluid\"\n\n  # 导航栏毛玻璃特效，实验性功能，可能会造成页面滚动掉帧和抖动，部分浏览器不支持会自动不生效\n  # Navigation bar frosted glass special animation. It is an experimental feature\n  ground_glass:\n    enable: false\n\n    # 模糊像素，只能为数字，数字越大模糊度越高\n    # Number of blurred pixel. the larger the number, the higher the blur\n    px: 3\n\n    # 不透明度，数字越大透明度越低，注意透明过度可能看不清菜单字体\n    # Ratio of opacity, 1.0 is completely opaque\n    # available: 0 - 1.0\n    alpha: 0.7\n\n  # 导航栏菜单，可自行增减，key 用来关联 languages/*.yml，如不存在关联则显示 key 本身的值；icon 是 css class，可以省略；增加 name 可以强制显示指定名称\n  # Navigation bar menu. `key` is used to associate languages/*.yml. If there is no association, the value of `key` itself will be displayed; if `icon` is a css class, it can be omitted; adding `name` can force the display of the specified name\n  menu:\n    - &#123; key: \"home\", link: \"/\", icon: \"iconfont icon-home-fill\" &#125;\n    - &#123; key: \"archive\", link: \"/archives/\", icon: \"iconfont icon-archive-fill\" &#125;\n    - &#123; key: \"category\", link: \"/categories/\", icon: \"iconfont icon-category-fill\" &#125;\n    - &#123; key: \"tag\", link: \"/tags/\", icon: \"iconfont icon-tags-fill\" &#125;\n    - &#123; key: \"about\", link: \"/about/\", icon: \"iconfont icon-user-fill\" &#125;\n    #- &#123; key: \"links\", link: \"/links/\", icon: \"iconfont icon-link-fill\" &#125;\n\n# 搜索功能，基于 hexo-generator-search 插件，若已安装其他搜索插件请关闭此功能，以避免生成多余的索引文件\n# Search feature, based on hexo-generator-search. If you have installed other search plugins, please disable this feature to avoid generating redundant index files\nsearch:\n  enable: true\n\n  # 搜索索引文件的路径，可以是相对路径或外站的绝对路径\n  # Path for search index file, it can be a relative path or an absolute path\n  path: /local-search.xml\n\n  # 文件生成在本地的位置，必须是相对路径\n  # The location where the index file is generated locally, it must be a relative location\n  generate_path: /local-search.xml\n\n  # 搜索的范围\n  # Search field\n  # Options: post | page | all\n  field: post\n\n  # 搜索是否扫描正文\n  # If true, search will scan the post content\n  content: true\n\n# 首屏图片的相关配置\n# Config of the big image on the first screen\nbanner:\n  # 视差滚动，图片与板块会随着屏幕滚动产生视差效果\n  # Scrolling parallax\n  parallax: true\n\n  # 图片最小的宽高比，以免图片两边被过度裁剪，适用于移动端竖屏时，如需关闭设为 0\n  # Minimum ratio of width to height, applicable to the vertical screen of mobile device, if you need to close it, set it to 0\n  width_height_ratio: 1.0\n\n# 向下滚动的箭头\n# Scroll down arrow\nscroll_down_arrow:\n  enable: true\n\n  # 头图高度不小于指定比例，才显示箭头\n  # Only the height of the banner image is greater than the ratio, the arrow is displayed\n  # Available: 0 - 100\n  banner_height_limit: 80\n\n  # 翻页后自动滚动\n  # Auto scroll after page turning\n  scroll_after_turning_page: true\n\n# 向顶部滚动的箭头\n# Scroll top arrow\nscroll_top_arrow:\n  enable: true\n\n# Open Graph metadata\n# See: https://hexo.io/docs/helpers.html#open-graph\nopen_graph:\n  enable: true\n  twitter_card: summary_large_image\n  twitter_id:\n  twitter_site:\n  google_plus:\n  fb_admins:\n  fb_app_id:\n\n\n#---------------------------\n# 页脚\n# Footer\n#---------------------------\nfooter:\n  # 页脚第一行文字的 HTML，建议保留 Fluid 的链接，用于向更多人推广本主题\n  # HTML of the first line of the footer, it is recommended to keep the Fluid link to promote this theme to more people\n  content: '\n    &#x3C;a href=\"https://hexo.io\" target=\"_blank\" rel=\"nofollow noopener\">&#x3C;span>Hexo&#x3C;/span>&#x3C;/a>\n    &#x3C;i class=\"iconfont icon-love\">&#x3C;/i>\n    &#x3C;a href=\"https://bgithub.xyz/fluid-dev/hexo-theme-fluid\" target=\"_blank\" rel=\"nofollow noopener\">&#x3C;span>Fluid&#x3C;/span>&#x3C;/a>\n  '\n\n  # 展示网站的 PV、UV 统计数\n  # Display website PV and UV statistics\n  statistics:\n    enable: false\n\n    # 统计数据来源，使用 leancloud, umami 需要设置 `web_analytics` 中对应的参数；使用 busuanzi 不需要额外设置，但是有时不稳定，另外本地运行时 busuanzi 显示统计数据很大属于正常现象，部署后会正常\n    # Data source. If use leancloud, umami, you need to set the parameter in `web_analytics`\n    # Options: busuanzi | leancloud | umami\n    source: \"busuanzi\"\n\n  # 国内大陆服务器的备案信息\n  # For Chinese mainland website policy, other areas keep disable\n  beian:\n    enable: false\n    # ICP证号\n    icp_text: 京ICP证123456号\n    # 公安备案号，不填则只显示ICP\n    police_text: 京公网安备12345678号\n    # 公安备案的编号，用于URL跳转查询\n    police_code: 12345678\n    # 公安备案的图片. 为空时不显示备案图片\n    police_icon: /img/police_beian.png\n\n\n#---------------------------\n# 首页\n# Home Page\n#---------------------------\nindex:\n  # 首页 Banner 头图，可以是相对路径或绝对路径，以下相同\n  # Path of Banner image, can be a relative path or an absolute path, the same on other pages\n  banner_img: /img/default.png\n\n  # 头图高度，屏幕百分比\n  # Height ratio of banner image\n  # Available: 0 - 100\n  banner_img_height: 100\n\n  # 头图黑色蒙版的不透明度，available: 0 - 1.0，1 是完全不透明\n  # Opacity of the banner mask, 1.0 is completely opaque\n  # Available: 0 - 1.0\n  banner_mask_alpha: 0.3\n\n  # 首页副标题的独立设置\n  # Independent config of home page subtitle\n  slogan:\n    enable: true\n\n    # 为空则按 hexo config.subtitle 显示\n    # If empty, text based on `subtitle` in hexo config\n    text: \"An elegant Material-Design theme for Hexo\"\n\n    # 通过 API 接口作为首页副标题的内容，必须返回的是 JSON 格式，如果请求失败则按 text 字段显示，该功能必须先开启 typing 打字机功能\n    # Subtitle of the homepage through the API, must be returned a JSON. If the request fails, it will be displayed in `text` value. This feature must first enable the typing animation\n    api:\n      enable: false\n\n      # 请求地址\n      # Request url\n      url: \"\"\n\n      # 请求方法\n      # Request method\n      # Available: GET | POST | PUT\n      method: \"GET\"\n\n      # 请求头\n      # Request headers\n      headers: &#123;&#125;\n\n      # 从请求结果获取字符串的取值字段，最终必须是一个字符串，例如返回结果为 &#123;\"data\": &#123;\"author\": \"fluid\", \"content\": \"An elegant theme\"&#125;&#125;, 则取值字段为 ['data', 'content']；如果返回是列表则自动选择第一项\n      # The value field of the string obtained from the response. For example, the response content is &#123;\"data\": &#123;\"author\": \"fluid\", \"content\": \"An elegant theme\"&#125;&#125;, the expected `keys: ['data','content']`; if the return is a list, the first item is automatically selected\n      keys: []\n\n  # 自动截取文章摘要\n  # Auto extract post\n  auto_excerpt:\n    enable: true\n\n  # 打开文章的标签方式\n  # The browser tag to open the post\n  # Available: _blank | _self\n  post_url_target: _self\n\n  # 是否显示文章信息（时间、分类、标签）\n  # Meta information of post\n  post_meta:\n    date: true\n    category: true\n    tag: true\n\n  # 文章通过 sticky 排序后，在首页文章标题前显示图标\n  # If the posts are sorted by `sticky`, an icon is displayed in front of the post title\n  post_sticky:\n    enable: true\n    icon: \"iconfont icon-top\"\n\n\n#---------------------------\n# 文章页\n# Post Page\n#---------------------------\npost:\n  banner_img: /img/default.png\n  banner_img_height: 70\n  banner_mask_alpha: 0.3\n\n  # 文章在首页的默认封面图，当没有指定 index_img 时会使用该图片，若两者都为空则不显示任何图片\n  # Path of the default post cover when `index_img` is not set. If both are empty, no image will be displayed\n  default_index_img:\n\n  # 文章标题下方的元信息\n  # Meta information below title\n  meta:\n    # 作者，优先根据 front-matter 里 author 字段，其次是 hexo 配置中 author 值\n    # Author, based on `author` field in front-matter, if not set, based on `author` value in hexo config\n    author:\n      enable: false\n\n    # 文章日期，优先根据 front-matter 里 date 字段，其次是 md 文件日期\n    # Post date, based on `date` field in front-matter, if not set, based on create date of .md file\n    date:\n      enable: true\n      # 格式参照 ISO-8601 日期格式化\n      # ISO-8601 date format\n      # See: http://momentjs.cn/docs/#/parsing/string-format/\n      format: \"LL a\"\n\n    # 字数统计\n    # Word count\n    wordcount:\n      enable: true\n\n    # 估计阅读全文需要的时长\n    # Estimated reading time\n    min2read:\n      enable: true\n      # 每个字词的长度，建议：中文≈2，英文≈5，中英混合可自行调节\n      # Average word length (chars count in word), ZH ≈ 2, EN ≈ 5\n      awl: 2\n      # 每分钟阅读字数，如果大部分是技术文章可适度调低\n      # Words per minute\n      wpm: 60\n\n    # 浏览量计数\n    # Number of visits\n    views:\n      enable: false\n      # 统计数据来源\n      # Data Source\n      # Options: busuanzi | leancloud | umami\n      source: \"busuanzi\"\n\n  # 在文章开头显示文章更新时间，该时间默认是 md 文件更新时间，可通过 front-matter 中 `updated` 手动指定（和 date 一样格式）\n  # Update date is displayed at the beginning of the post. The default date is the update date of the md file, which can be manually specified by `updated` in front-matter (same format as date)\n  updated:\n    enable: false\n\n    # 格式参照 ISO-8601 日期格式化\n    # ISO-8601 date format\n    # See: http://momentjs.cn/docs/#/parsing/string-format/\n    date_format: \"LL a\"\n\n    # 是否使用相对时间表示，比如：\"3 天前\"\n    # If true, it will be a relative time, such as: \"3 days ago\"\n    relative: false\n\n    # 提示标签类型\n    # Note class\n    # Options: default | primary | info | success | warning | danger | light\n    note_class: info\n\n  # 侧边栏展示当前分类下的文章\n  # Sidebar of category\n  category_bar:\n    enable: true\n\n    # 开启后，只有在文章 Front-matter 里指定 `category_bar: true` 才会展示分类，也可以通过 `category_bar: [\"分类A\"]` 来指定分类\n    # If true, only set `category_bar: true` in Front-matter will enable sidebar of category, also set `category_bar: [\"CategoryA\"]` to specify categories\n    specific: true\n\n    # 置于板块的左侧或右侧\n    # place in the board\n    # Options: left | right\n    placement: left\n\n    # 文章的排序字段，前面带减号是倒序，不带减号是正序\n    # Sort field for posts, with a minus sign is reverse order\n    # Options: date | title | or other field of front-matter\n    post_order_by: \"title\"\n\n    # 单个分类中折叠展示文章数的最大值，超过限制会显示 More，0 则不限制\n    # The maximum number of posts in a single category. If the limit is exceeded, it will be displayed More. If 0 no limit\n    post_limit: 0\n\n  # 侧边栏展示文章目录\n  # Table of contents (TOC) in the sidebar\n  toc:\n    enable: true\n\n    # 置于板块的左侧或右侧\n    # place in the board\n    # Options: left | right\n    placement: right\n\n    # 目录会选择这些节点作为标题\n    # TOC will select these nodes as headings\n    headingSelector: \"h1,h2,h3,h4,h5,h6\"\n\n    # 层级的折叠深度，0 是全部折叠，大于 0 后如果存在下级标题则默认展开\n    # Collapse depth. If 0, all headings collapsed. If greater than 0, it will be expanded by default if there are sub headings\n    collapseDepth: 0\n\n  # 版权声明，会显示在每篇文章的结尾\n  # Copyright, will be displayed at the end of each post\n  copyright:\n    enable: true\n\n    # CreativeCommons license\n    # See: https://creativecommons.org/share-your-work/cclicenses/\n    # Options: BY | BY-SA | BY-ND | BY-NC | BY-NC-SA | BY-NC-ND | ZERO\n    license: 'BY'\n\n    # 显示作者\n    author:\n      enable: true\n\n    # 显示发布日期\n    # Show post date\n    post_date:\n      enable: true\n      format: \"LL\"\n\n    # 显示更新日期\n    # Show update date\n    update_date:\n      enable: false\n      format: \"LL\"\n\n  # 文章底部上一篇下一篇功能\n  # Link to previous/next post\n  prev_next:\n    enable: true\n\n  # 文章图片标题\n  # Image caption\n  image_caption:\n    enable: true\n\n  # 文章图片可点击放大\n  # Zoom feature of images\n  image_zoom:\n    enable: true\n    # 放大后图片链接替换规则，可用于将压缩图片链接替换为原图片链接，如 ['-slim', ''] 是将链接中 `-slim` 移除；如果想使用正则请使用 `re:` 前缀，如 ['re:\\\\d&#123;3,4&#125;\\\\/\\\\d&#123;3,4&#125;\\\\/', '']\n    # The image url replacement when zooming, the feature can be used to replace the compressed image to the original image, eg: ['-slim', ''] removes `-slim` from the image url when zooming; if you want to use regular, use prefix `re:`, eg: ['re:\\\\d&#123;3,4&#125;\\\\/\\\\d&#123;3,4&#125;\\\\/','']\n    img_url_replace: ['', '']\n\n  # 脚注语法，会在文章底部生成脚注，如果 Markdown 渲染器本身支持，则建议关闭，否则可能会冲突\n  # Support footnote syntax, footnotes will be generated at the bottom of the post page. If the Markdown renderer itself supports it, please disable it, otherwise it may conflict\n  footnote:\n    enable: true\n    # 脚注的节标题，也可以在 front-matter 中通过 `footnote: &#x3C;h2>Reference&#x3C;/h2>` 这种形式修改单独页面的 header\n    # The section title of the footnote, you can also modify the header of a single page in the form of `footnote: &#x3C;h2>Reference&#x3C;/h2>` in front-matter\n    header: ''\n\n  # 数学公式，开启之前需要更换 Markdown 渲染器，否则复杂公式会有兼容问题，具体请见：https://hexo.fluid-dev.com/docs/guide/##latex-数学公式\n  # Mathematical formula. If enable, you need to change the Markdown renderer, see: https://hexo.fluid-dev.com/docs/en/guide/#math\n  math:\n    # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `math: true`\n    # If you want to use math on the custom page, you need to set `math: true` in Front-matter\n    enable: false\n\n    # 开启后，只有在文章 Front-matter 里指定 `math: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度\n    # If true, only set `math: true` in Front-matter will enable math, to load faster when the page does not contain math\n    specific: false\n\n    # Options: mathjax | katex\n    engine: mathjax\n\n  # 流程图，基于 mermaid-js，具体请见：https://hexo.fluid-dev.com/docs/guide/#mermaid-流程图\n  # Flow chart, based on mermaid-js, see: https://hexo.fluid-dev.com/docs/en/guide/#mermaid\n  mermaid:\n    # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `mermaid: true`\n    # If you want to use mermaid on the custom page, you need to set `mermaid: true` in Front-matter\n    enable: false\n\n    # 开启后，只有在文章 Front-matter 里指定 `mermaid: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度\n    # If true, only set `mermaid: true` in Front-matter will enable mermaid, to load faster when the page does not contain mermaid\n    specific: false\n\n    # See: http://mermaid-js.github.io/mermaid/\n    options: &#123; theme: 'default' &#125;\n\n  # 评论插件\n  # Comment plugin\n  comments:\n    enable: false\n    # 指定的插件，需要同时设置对应插件的必要参数\n    # The specified plugin needs to set the necessary parameters at the same time\n    # Options: utterances | disqus | gitalk | valine | waline | changyan | livere | remark42 | twikoo | cusdis | giscus | discuss\n    type: disqus\n\n\n#---------------------------\n# 评论插件\n# Comment plugins\n#\n# 开启评论需要先设置上方 `post: comments: enable: true`，然后根据 `type` 设置下方对应的评论插件参数\n# Enable comments need to be set `post: comments: enable: true`, then set the corresponding comment plugin parameters below according to `type`\n#---------------------------\n\n# Utterances\n# 基于 GitHub Issues\n# Based on GitHub Issues\n# See: https://utteranc.es\nutterances:\n  repo:\n  issue_term: pathname\n  label: utterances\n  theme: github-light\n  theme_dark: github-dark\n\n# Disqus\n# 基于第三方的服务，国内用户直接使用容易被墙，建议配合 Disqusjs\n# Based on third-party service\n# See: https://disqus.com\ndisqus:\n  shortname:\n  # 以下为 Disqusjs 支持, 国内用户如果想使用 Disqus 建议配合使用\n  # The following are Disqusjs configurations, please ignore if DisqusJS is not required\n  # See: https://github.com/SukkaW/DisqusJS\n  disqusjs: false\n  apikey:\n\n# Gitalk\n# 基于 GitHub Issues\n# Based on GitHub Issues\n# See: https://github.com/gitalk/gitalk#options\ngitalk:\n  clientID:\n  clientSecret:\n  repo:\n  owner:\n  admin: ['name']\n  language: zh-CN\n  labels: ['Gitalk']\n  perPage: 10\n  pagerDirection: last\n  distractionFreeMode: false\n  createIssueManually: true\n  # 默认 proxy 可能会失效，解决方法请见下方链接\n  # The default proxy may be invalid, refer to the links for solutions\n  # https://github.com/gitalk/gitalk/issues/429\n  # https://github.com/Zibri/cloudflare-cors-anywhere\n  proxy: https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token\n\n# Valine\n# 基于 LeanCloud\n# Based on LeanCloud\n# See: https://valine.js.org/\nvaline:\n  appId:\n  appKey:\n  path: window.location.pathname\n  placeholder:\n  avatar: 'retro'\n  meta: ['nick', 'mail', 'link']\n  requiredFields: []\n  pageSize: 10\n  lang: 'zh-CN'\n  highlight: false\n  recordIP: false\n  serverURLs: ''\n  emojiCDN:\n  emojiMaps:\n  enableQQ: false\n\n# Waline\n# 从 Valine 衍生而来，额外增加了服务端和多种功能\n# Derived from Valine, with self-hosted service and new features\n# See: https://waline.js.org/\nwaline:\n  serverURL: ''\n  path: window.location.pathname\n  meta: ['nick', 'mail', 'link']\n  requiredMeta: ['nick']\n  lang: 'zh-CN'\n  emoji: ['https://cdn.jsdelivr.net/gh/walinejs/emojis/weibo']\n  dark: 'html[data-user-color-scheme=\"dark\"]'\n  wordLimit: 0\n  pageSize: 10\n\n# 畅言 Changyan\n# 基于第三方的服务\n# Based on third-party service, insufficient support for regions outside China\n# http://changyan.kuaizhan.com\nchangyan:\n  appid: ''\n  appkey: ''\n\n# 来必力 Livere\n# 基于第三方的服务\n# Based on third-party service\n# See: https://www.livere.com\nlivere:\n  uid: ''\n\n# Remark42\n# 需要自托管服务端\n# Based on self-hosted service\n# See: https://remark42.com\nremark42:\n  host:\n  site_id:\n  max_shown_comments: 10\n  locale: zh\n  components: ['embed']\n\n# Twikoo\n# 支持腾讯云、Vercel、Railway 等多种平台部署\n# Based on Tencent CloudBase\n# See: https://twikoo.js.org\ntwikoo:\n  envId:\n  region: ap-shanghai\n  path: window.location.pathname\n\n# Cusdis\n# 基于第三方服务或自托管服务\n# Based on third-party or self-hosted service\n# See https://cusdis.com\ncusdis:\n  host:\n  app_id:\n  lang: zh-cn\n\n# Giscus\n# 基于 GitHub Discussions，类似于 Utterances\n# Based on GitHub Discussions, similar to Utterances\n# See: https://giscus.app/\ngiscus:\n  repo:\n  repo-id:\n  category:\n  category-id:\n  theme-light: light\n  theme-dark: dark\n  mapping: pathname\n  reactions-enabled: 1\n  emit-metadata: 0\n  input-position: top\n  lang: zh-CN\n\n# Discuss\n# 多平台、多数据库、自托管、免费开源评论系统\n# Self-hosted, small size, multi-platform, multi-database, free and open source commenting system\n# See: https://discuss.js.org\ndiscuss:\n  serverURLs:\n  path: window.location.pathname\n\n\n#---------------------------\n# 归档页\n# Archive Page\n#---------------------------\narchive:\n  banner_img: /img/default.png\n  banner_img_height: 60\n  banner_mask_alpha: 0.3\n\n\n#---------------------------\n# 分类页\n# Category Page\n#---------------------------\ncategory:\n  enable: true\n  banner_img: /img/default.png\n  banner_img_height: 60\n  banner_mask_alpha: 0.3\n\n  # 分类的排序字段，前面带减号是倒序，不带减号是正序\n  # Sort field for categories, with a minus sign is reverse order\n  # Options: length | name\n  order_by: \"-length\"\n\n  # 层级的折叠深度，0 是全部折叠，大于 0 后如果存在子分类则默认展开\n  # Collapse depth. If 0, all posts collapsed. If greater than 0, it will be expanded by default if there are subcategories\n  collapse_depth: 0\n\n  # 文章的排序字段，前面带减号是倒序，不带减号是正序\n  # Sort field for posts, with a minus sign is reverse order\n  # Options: date | title | or other field of front-matter\n  post_order_by: \"-date\"\n\n  # 单个分类中折叠展示文章数的最大值，超过限制会显示 More，0 则不限制\n  # The maximum number of posts in a single category. If the limit is exceeded, it will be displayed More. If 0 no limit\n  post_limit: 10\n\n\n#---------------------------\n# 标签页\n# Tag Page\n#---------------------------\ntag:\n  enable: true\n  banner_img: /img/default.png\n  banner_img_height: 80\n  banner_mask_alpha: 0.3\n  tagcloud:\n    min_font: 15\n    max_font: 30\n    unit: px\n    start_color: \"#BBBBEE\"\n    end_color: \"#337ab7\"\n\n\n#---------------------------\n# 关于页\n# About Page\n#---------------------------\nabout:\n  enable: true\n  banner_img: /img/default.png\n  banner_img_height: 60\n  banner_mask_alpha: 0.3\n  avatar: /img/avatar.png\n  name: \"Fluid\"\n  intro: \"An elegant theme for Hexo\"\n  # 更多图标可从 https://hexo.fluid-dev.com/docs/icon/ 查找，`class` 代表图标的 css class，添加 `qrcode` 后，图标不再是链接而是悬浮二维码\n  # More icons can be found from https://hexo.fluid-dev.com/docs/en/icon/  `class` is the css class of the icon. If adding `qrcode`, the icon is no longer a link, but a hovering QR code\n  icons:\n    - &#123; class: \"iconfont icon-github-fill\", link: \"https://bgithub.xyz\", tip: \"GitHub\" &#125;\n    - &#123; class: \"iconfont icon-douban-fill\", link: \"https://douban.com\", tip: \"豆瓣\" &#125;\n    - &#123; class: \"iconfont icon-wechat-fill\", qrcode: \"/img/favicon.png\" &#125;\n\n\n#---------------------------\n# 自定义页\n# Custom Page\n#\n# 通过 hexo new page 命令创建的页面\n# Custom Page through `hexo new page`\n#---------------------------\npage:\n  banner_img: /img/default.png\n  banner_img_height: 60\n  banner_mask_alpha: 0.3\n\n\n#---------------------------\n# 404页\n# 404 Page\n#---------------------------\npage404:\n  enable: true\n  banner_img: /img/default.png\n  banner_img_height: 85\n  banner_mask_alpha: 0.3\n  # 重定向到首页的延迟(毫秒)\n  # Delay in redirecting to home page (milliseconds)\n  redirect_delay: 5000\n\n\n#---------------------------\n# 友链页\n# Links Page\n#---------------------------\nlinks:\n  enable: true\n  banner_img: /img/default.png\n  banner_img_height: 60\n  banner_mask_alpha: 0.3\n  # 友链的成员项\n  # Member item of page\n  items:\n    - &#123;\n      title: \"Fluid Blog\",\n      intro: \"主题博客\",\n      link: \"https://hexo.fluid-dev.com/\",\n      avatar: \"/img/favicon.png\"\n    &#125;\n    - &#123;\n      title: \"Fluid Docs\",\n      intro: \"主题使用指南\",\n      link: \"https://hexo.fluid-dev.com/docs/\",\n      avatar: \"/img/favicon.png\"\n    &#125;\n    - &#123;\n      title: \"Fluid Repo\",\n      intro: \"主题 GitHub 仓库\",\n      link: \"https://bgithub.xyz/fluid-dev/hexo-theme-fluid\",\n      avatar: \"/img/favicon.png\"\n    &#125;\n\n  # 当成员头像加载失败时，替换为指定图片\n  # When the member avatar fails to load, replace the specified image\n  onerror_avatar: /img/avatar.png\n\n  # 友链下方自定义区域，支持 HTML，可插入例如申请友链的文字\n  # Custom content at the bottom of the links\n  custom:\n    enable: false\n    content: '&#x3C;hr>&#x3C;p>在下方留言申请加入我的友链，按如下格式提供信息：&#x3C;/p>&#x3C;ul>&#x3C;li>博客名：Fluid&#x3C;/li>&#x3C;li>简介：Fluid 主题官方博客&#x3C;/li>&#x3C;li>链接：https://hexo.fluid-dev.com&#x3C;/li>&#x3C;li>图片：https://hexo.fluid-dev.com/img/favicon.png&#x3C;/li>&#x3C;/ul>'\n\n  # 评论插件\n  # Comment plugin\n  comments:\n    enable: false\n    # 指定的插件，需要同时设置对应插件的必要参数\n    # The specified plugin needs to set the necessary parameters at the same time\n    # Options: utterances | disqus | gitalk | valine | waline | changyan | livere | remark42 | twikoo | cusdis | giscus | discuss\n    type: disqus\n\n\n#---------------------------\n# 以下是配置 JS CSS 等静态资源的 URL 前缀，可以自定义成 CDN 地址，\n# 如果需要修改，最好使用与默认配置相同的版本，以避免潜在的问题，\n# ** 如果你不知道如何设置，请不要做任何改动 **\n#\n# Here is the url prefix to configure the static assets. Set CDN addresses you want to customize.\n# Be aware that you would better use the same version as default ones to avoid potential problems.\n# DO NOT EDIT THE FOLLOWING SETTINGS UNLESS YOU KNOW WHAT YOU ARE DOING\n#---------------------------\n\nstatic_prefix:\n  # 内部静态\n  # Internal static\n  internal_js: /js\n  internal_css: /css\n  internal_img: /img\n\n  anchor: https://lib.baomitu.com/anchor-js/5.0.0/\n\n  github_markdown: https://lib.baomitu.com/github-markdown-css/4.0.0/\n\n  jquery: https://lib.baomitu.com/jquery/3.6.4/\n\n  bootstrap: https://lib.baomitu.com/twitter-bootstrap/4.6.1/\n\n  prismjs: https://lib.baomitu.com/prism/1.29.0/\n\n  tocbot: https://lib.baomitu.com/tocbot/4.20.1/\n\n  typed: https://lib.baomitu.com/typed.js/2.0.12/\n\n  fancybox: https://lib.baomitu.com/fancybox/3.5.7/\n\n  nprogress: https://lib.baomitu.com/nprogress/0.2.0/\n\n  mathjax: https://lib.baomitu.com/mathjax/3.2.2/\n\n  katex: https://lib.baomitu.com/KaTeX/0.16.2/\n\n  busuanzi: https://busuanzi.ibruce.info/busuanzi/2.3/\n\n  clipboard: https://lib.baomitu.com/clipboard.js/2.0.11/\n\n  mermaid: https://lib.baomitu.com/mermaid/8.14.0/\n\n  valine: https://lib.baomitu.com/valine/1.5.1/\n\n  waline: https://registry.npmmirror.com/@waline/client/2.15.8/files/dist/\n\n  gitalk: https://lib.baomitu.com/gitalk/1.8.0/\n\n  disqusjs: https://lib.baomitu.com/disqusjs/1.3.0/\n\n  twikoo: https://lib.baomitu.com/twikoo/1.6.8/\n\n  discuss: https://lib.baomitu.com/discuss/1.2.1/\n\n  hint: https://lib.baomitu.com/hint.css/2.7.0/\n\n  moment: https://lib.baomitu.com/moment.js/2.29.4/\n\n\n\n记得改主题和语言。\ntheme: fluid\nlanguage: zh-CN\n\nAurora首先：\nnpm install hexo-theme-aurora hexo-plugin-aurora --save\n\n然后复制模板，前往 https://github.com/auroral-ui/hexo-theme-aurora/blob/main/_config.yml，复制所有内容。\n打不开很正常，可以尝试 bgithub.xyz，也可以直接复制下面的（所以是不是废话了）\n接着废话主题文档是这么写的：\n\n_config.yml\n#! ---------------------------------------------------------------\n#! Aurora Theme for Hexo\n#! ---------------------------------------------------------------\n#! Designed &#x26; Coded By Benny Guo\n#! ---------------------------------------------------------------\n\n#! ---------------------------------------------------------------\n#! Site Configs\n#！ @docs https://aurora.tridiamond.tech/guide/configuration.html\n#! ---------------------------------------------------------------\nsite:\n  subtitle: Aurora's Blog\n  author: Aurora\n  nick: Auroral UI\n  description:\n  link: '/'\n  language: en\n  multi_language: true\n  logo:\n  avatar:\n  beian:\n    number: ''\n    link: ''\n  police_beian:\n    number: ''\n    link: ''\n  # Start date of the blog YYY-MM-DD\n  # 博客开始运行日期\n  started_date:\n  # Path unique identifier (文章 URL 唯一标识)\n  # uid: use unique ID\n  # slug: use generated slug base on title\n  # (Default is 'slug')\n  pathSlug: 'slug'\n\n#! ---------------------------------------------------------------\n#! Authors Configs\n#！ @docs https://aurora.tridiamond.tech/guide/authors.html\n#! ---------------------------------------------------------------\nauthors:\n  ##! example\n  # TriDiamond:\n  #   name: TriDiamond\n  #   avatar: https://up.enterdesk.com/edpic_source/44/ff/3d/44ff3d6bd2819d524facfcc33205d4cd.jpg\n  #   link: https://github.com/TriDiamond\n  #   description: 'Think like an artist, code like an artisan.'\n  #   socials:\n  #     github: https://tridiamond.tech\n\n#! ---------------------------------------------------------------\n#! Menu Configs\n#！ @docs https://aurora.tridiamond.tech/guide/menu.html\n#! ---------------------------------------------------------------\nmenu:\n  About: true\n  Tags: true\n  Archives: true\n  Friends: false\n\n#! ---------------------------------------------------------------\n#! Theme Config\n#! @docs https://aurora.tridiamond.tech/guide/theme.html\n#! ---------------------------------------------------------------\ntheme:\n  dark_mode: true\n  profile_shape: diamond # support `circle`, `diamond`, `rounded`\n  feature: true\n  gradient:\n    color_1: '#24c6dc'\n    color_2: '#5433ff'\n    color_3: '#ff0099'\n\n#! ---------------------------------------------------------------\n#! Social Configs\n#! @docs https://aurora.tridiamond.tech/guide/social.html\n#! ---------------------------------------------------------------\nsocials:\n  customs:\n  ##! Example:\n  ##! --- Using SVG\n  # bilibili:\n  #   icon: http://localhost:4000/svg/bilibili.svg\n  #   link: https://live.bilibili.com/22619211\n\n  ##! --- Using IconFont\n  # baidu:\n  #   icon: iconfont icon-baidu\n  #   link: https://live.bilibili.com/22619211\n\n  ##! --- Using FontAwesome\n  # book:\n  #   icon: far fa-address-book\n  #   link: https://live.bilibili.com/22619211\n\n#! ---------------------------------------------------------------\n#! Site Meta Configs\n#! @docs https://aurora.tridiamond.tech/guide/theme.html\n#! ---------------------------------------------------------------\nsite_meta:\n  cdn: cn\n  favicon:\n  description: ''\n  keywords: ''\n  author: ''\n\n#! ---------------------------------------------------------------\n#! Plugins\n#! @docs https://aurora.tridiamond.tech/guide/plugins.html\n#! ---------------------------------------------------------------\n\n# For local development only!\ngitalk:\n  enable: true\n  autoExpand: true\n  clientID: ''\n  clientSecret: ''\n  repo: '' ## dev-blo-comments\n  owner: '' ## owner name\n  admin: [''] ## ['admin_name']\n  id: uid\n  language: en\n  distractionFreeMode: true\n  recentComment: true\n  proxy: ''\n\n# Valine comment plugin (recommended!)\n# see https://valine.js.org/quickstart.html\nvaline:\n  enable: false\n  app_id:\n  app_key:\n  avatar: ''\n  placeholder: Leave your thoughts behind~\n  visitor: true\n  lang: en\n  avatarForce: false\n  meta: ['nick', 'mail']\n  requiredFields: ['nick', 'mail']\n  admin: '' # admin username\n  recentComment: true\n\n# Twikoo comment plugin\n# see https://twikoo.js.org/quick-start.html\ntwikoo:\n  enable: false\n  recentComment: true\n  envId: xxxxxxxxxxxxxxx # 腾讯云环境填 envId；Vercel 环境填地址（https://xxx.vercel.app）\n  # region: ap-guangzhou # 环境地域，默认为 ap-shanghai，腾讯云环境填 ap-shanghai 或 ap-guangzhou；Vercel 环境不填\n  lang: 'en' # 用于手动设定评论区语言，支持的语言列表 https://github.com/imaegoo/twikoo/blob/main/src/client/utils/i18n/index.js\n\n# Waline comment plugin\n# see https://waline.js.org/guide/get-started/\nwaline:\n  enable: false\n  recentComment: true\n  reaction: false\n  login: 'disable'\n  meta: ['nick', 'mail']\n  requiredMeta: ['nick', 'mail']\n  commentSorting: 'latest'\n  wordLimit: 0\n  imageUploader: false\n  pageSize: 10\n  serverURL: '' # 填写服务端地址\n\n# Enable Busuanzi statistic plugin\n# see http://ibruce.info/2015/04/04/busuanzi/\nbusuanzi:\n  enable: false\n\ncopy_protection:\n  enable: true\n  author:\n    cn: 作者\n    en: Author\n  link:\n    cn: 本文来自于\n    en: Article is from\n  license:\n    cn: 博客内容遵循 署名-非商业性使用-相同方式共享 4.0 国际 (CC BY-NC-SA 4.0) 协议\n    en: This content is shared under the CC BY-NC-SA 4.0 protocol (Non-Commercial)\n\n#! ---------------------------------------------------------------\n#! Enable Aurora Bot Dia\n#! @docs https://aurora.tridiamond.tech/guide/site-meta.html#custom-meta\n#! ---------------------------------------------------------------\naurora_bot:\n  enable: false\n  locale: en\n  bot_type: dia\n  tips:\n\n#! ---------------------------------------------------------------\n#! Injections\n#! @docs https://aurora.tridiamond.tech/guide/site-meta.html#custom-meta\n#! ---------------------------------------------------------------\ninjects:\n  scripts:\n  css:\n\n#! ---------------------------------------------------------------\n#! Footer links\n#! ---------------------------------------------------------------\nfooter_links:\n  - title: # main title\n    links:\n      - title: # link title\n        url: # URL link\n      - title: # link title\n        url: # URL link\n      - title: Friends # link of friends mode / 友链模式\n        mode: 'links'\n\n#! ---------------------------------------------------------------\n#! Highlighter Shiki\n#! ---------------------------------------------------------------\nshiki:\n  enable: true\n  backgroundColor: \"#1a1a1a\"\n\n\n\n接着废话主题文档是这么写的：\n\n主题文档引用\n\n来自 快速上手 | Hexo Aurora Docs\n\n因为主题是使用 NPM 或者 Yarn 安装的，而不是 clone 到 themes 文件夹的。所以我们需要自己创建一个配置文件。你只需要在 Hexo 博客的根目录下创建一个 _config.aurora.yml 配置文件来配置主题。要获取默认主题模板，对于 Linux 系统 (MacOS&#x2F;LinuxOS) 用户只需执行以下命令。\n对于 Windows 用户，您可以将下面的模板复制到 _config.aurora.yml 中。\nLinux 复制模版命令\ncp -rf ./node_modules/hexo-theme-aurora/_config.yml ./_config.aurora.yml\n\n也可以直接复制这个模版到项目根目录的 _config.aurora.yml 中\n\n\n记得修改语言：\ntheme: aurora\n\n还需修改 permalink、代码高亮等，都在 _config.yml 里。\n\n\n\n\n\n\n\n注意\n不是 _config.aurora.yml！\n\n\n修改 URL 一般在 141414 行至 212121 行。\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: http://example.com\npermalink: /post/:title.html\npermalink_defaults:\npretty_urls:\n  trailing_index: true # Set to false to remove trailing 'index.html' from permalinks\n  trailing_html: true # Set to false to remove trailing '.html' from permalinks\n\nAurora 主题 2.52.52.5 版本开始主题已经改为使用 Shiki 作为代码高亮引擎。所以需要修改代码高亮。\nsyntax_highlighter: shiki\nshiki:\n  enable: true\n  theme: github-light\n  backgroundColor: \"#E2EAF4\"\nhighlight:\n  # line_number: true\n  # auto_detect: false\n  # tab_replace: ''\n  # wrap: true\n  # hljs: false\n  enable: false\nprismjs:\n  # preprocess: true\n  # line_number: true\n  # tab_replace: ''\n  enable: false\n\n_config.aurora.yml 也需添加字段：（没有才加，一般都有）\n#! ---------------------------------------------------------------\n#! Highlighter Shiki\n#! ---------------------------------------------------------------\nshiki:\n  enable: true\n  backgroundColor: '#1a1a1a'\n\n总算安装完毕，这个主题是一个非常美观的主题（至少我这么认为），还有一个萌萌的 小Dia 看板娘（详见插件 | Hexo Aurora Docs）。但还是存在一些不足，比如没复制按钮（虽然说后面会加），关于这一块可以阅读 Hexo Aurora 主题美化、添加复制按钮。\n\n","slug":"Hexo主题安装","date":"2025-05-09T08:00:00.000Z","categories_index":"Hexo","tags_index":"Hexo,博客相关","author_index":"CodeNebula"},{"id":"5ed8b908115516c8108f8f38b20c5876","title":"C++栈","content":"这里讲 STL 中的栈。\n图片 \n栈的常用函数（成员函数）\npush(x):将元素 xxx 压入栈顶。\npop():将栈顶元素弹出。\ntop():返回栈顶元素。\nsize():返回栈中元素的个数。\nempty():判断栈是否为空。\n\n注意：STL 中的栈常数有点大，而且在栈内没有元素时使用pop()函数或top()会RE，如果不嫌麻烦，可以用数组模拟。\n例题请模拟一个栈。将有 ttt 次操作，每次操作至少会给你一个 opopop。每输出一个数换一次行.分为三种操作：  \n\n会在给你一个 xxx，请将 xxx 压入栈顶。\n如果栈内是空的，请输出 RE 并不再操作，否则输出栈顶元素并弹出。\n输出元素个数。\n\n代码# include &#x3C;bits/stdc++.h>\nusing namespace std;\nint t, op, x;\nstack &#x3C;int> st;\nint main()\n&#123;\n\tcin >> t;\n\twhile(t --)\n\t&#123;\n\t\tcin >> op;\n\t\tif(op == 1)\n\t\t&#123;\n\t\t\tcin >> x;\n\t\t\tst.push(x);\n\t\t&#125;\n\t\telse if(op == 2)\n\t\t&#123;\n\t\t\tif(st.empty())\n\t\t\t&#123;\n\t\t\t\tcout &#x3C;&#x3C; \"RE\" &#x3C;&#x3C; \"\\n\";\n\t\t\t\treturn 0;\n\t\t\t&#125;\n\t\t\tcout &#x3C;&#x3C; st.top() &#x3C;&#x3C; \"\\n\";\n\t\t\tst.pop();\n\t\t&#125;\n\t\telse\n\t\t&#123;\n\t\t\tcout &#x3C;&#x3C; st.size() &#x3C;&#x3C; \"\\n\";\n\t\t&#125;\n\t&#125;\n\treturn 0;\n&#125;\n\n单调栈单调栈是一种特殊的栈，它的元素是单调递增或单调递减的。\n单调栈的主要作用是在一个序列中找到每个元素左边或右边第一个比它小或大的元素。\n单调栈的实现方法是使用一个栈来存储元素，每次将一个元素入栈时，将栈中比它小的元素弹出，直到栈顶元素比它大或栈为空。\n单调栈的时间复杂度为 O(n)O(n)O(n)，其中 nnn 是序列的长度。\n单调栈的应用非常广泛，例如在计算最大矩形面积、最大子矩阵和最大子数组和、离线 RMQRMQRMQ 等问题中，都可以使用单调栈来解决。\n单调栈的实现方法如下：\n\n创建一个空栈。\n遍历序列中的每个元素。\n如果栈为空或栈顶元素比当前元素小，则将当前元素入栈。\n如果栈顶元素比当前元素大，则将栈顶元素弹出。\n重复步骤 4，直到栈为空或栈顶元素比当前元素小。\n将当前元素入栈。\n重复步骤 3 到 6，直到序列中的所有元素都被遍历。\n输出。\n\n代码# include &#x3C;bits/stdc++.h>\nusing namespace std;\nint n , a , ans;\nstack &#x3C;int> st;\nint main()\n&#123;\n\tcin >> n;\n\tfor(int i = 1 ; i &#x3C;= n ; i ++)\n\t&#123;\n\t\tcin >> a[i];\n\t\twhile(!st.empty() &#x26;&#x26; a[i] > a[st.top()])\n\t\t&#123;\n\t\t\tans[st.top()] = i;\n\t\t\tst.pop();\n\t\t&#125;\n\t\tst.push(i);\n\t&#125;\n\tfor(int i = 1 ; i &#x3C;= n ; i ++)\n\t&#123;\n\t\tcout &#x3C;&#x3C; ans[i] &#x3C;&#x3C; \" \";\n\t&#125;\n\treturn 0;\n&#125;\n\n\n\n","slug":"C++栈","date":"2025-05-08T16:00:00.000Z","categories_index":"C++","tags_index":"OI,STL","author_index":"CodeNebula"},{"id":"2576f649dc2536db9d92a414b582ade4","title":"题解：P3371 【模板】单源最短路径（弱化版）","content":"题目都说了可以用 SPFA 啊，秀啥 Dijkstra 啊！\n先介绍一下 SPFA 死了的算法。\n\n\n\n\n\n\n\n\nSPFA 算法，全名 Shortest Path Faster Algorithm，是一种用于解决单源最短路径问题的算法，它是 Bellman-Ford 算法的改进版本。SPFA 算法可以处理带有负权边的图，但不能处理带有负权环的图。算法的基本思想是使用一个队列来存储所有待优化的节点，并通过不断的松弛操作来逼近最短路径。\n注：来源于网络。\nSPFA 的基本步骤\n初始化答案数组，全部设为无穷大。\n\n将源点加入队列，打上在队列的标记，将到起点的答案设为 000。\n\n队列非空时，取出队首元素存下后立即取消标记并弹出队首元素，并对其所有出边进行松弛操作。\n\n如果松弛成功，并且终点不在队列中，则将终点加入队列并打上在队列的标记。\n\n重复步骤 333 和 444，直到队列为空。\n\n\n手玩一下样例样例如图\n\n将答案数组记作 dis，是否在队列的标记数组记作 vis。\n最开始的 dis 与 vis 如下图。\n\n最开始的队列如下图。\n\n第一轮，取队首元素 111，此时 111 能松弛 222、333、444，且 222、333、444 都不在队列中，都没打标记，所以将这几个数全部扔进队列并打上标记。\n此时的 dis、vis、队列如下图。\n\n\n第二轮，取队首元素 222，此时 222 能松弛 333 和 444，但 333 和 444 都在队列中，都打了标记，所以不再扔进队列。\n此时的 dis、vis、队列如下图。\n\n\n第三轮，取队首元素 333，此时 333 不能松弛任何一个点。\n此时的 dis、vis、队列如下图。\n\n\n第三轮，取队首元素 444，此时 444 不能松弛任何一个点。\n此时的 dis、vis、队列如下图。\n\n\n此时队列已经空了，结束。\n放代码# include &#x3C;bits/stdc++.h>\nusing namespace std;\nint n , m , s , u , v , w , dis[10010];\nbool vis[10010];\nvector &#x3C;pair &#x3C;int , int> > g[10010];\nvoid bfs()\n&#123;\n    for(int i = 1 ; i &#x3C;= n ; i ++)\n    &#123;\n        dis[i] = 1e9;\n    &#125;\n    queue &#x3C;int> q;\n    q.push(s);\n    vis[s] = 1;\n    dis[s] = 0;\n    while(!q.empty())\n    &#123;\n        int t = q.front();\n        q.pop();\n        vis[t] = 0;\n        for(int i = 0 ; i &#x3C; g[t].size() ; i ++)\n        &#123;\n            if(dis[g[t][i].first] > dis[t] + g[t][i].second)\n            &#123;\n                dis[g[t][i].first] = dis[t] + g[t][i].second;\n                if(vis[g[t][i].first])\n                &#123;\n                    continue;\n                &#125;\n                vis[g[t][i].first] = 1;\n                q.push(g[t][i].first);\n            &#125;\n        &#125;\n    &#125;\n    return ;\n&#125;\nint main()\n&#123;\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    cin >> n >> m >> s;\n    for(int i = 1 ; i &#x3C;= m ; i ++)\n    &#123;\n        cin >> u >> v >> w;\n        g[u].push_back(&#123;v , w&#125;);\n    &#125;\n    bfs();\n    for(int i = 1 ; i &#x3C;= n ; i ++)\n    &#123;\n        if(dis[i] == 1e9)\n        &#123;\n            cout &#x3C;&#x3C; (1LL &#x3C;&#x3C; 31) - 1 &#x3C;&#x3C; \" \";\n        &#125;\n        else\n        &#123;\n            cout &#x3C;&#x3C; dis[i] &#x3C;&#x3C; \" \";\n        &#125;\n    &#125;\n    return 0;\n&#125;\n\n\n","slug":"题解：P3371 【模板】单源最短路径（弱化版）","date":"2025-05-08T16:00:00.000Z","categories_index":"题解","tags_index":"OI,最短路","author_index":"CodeNebula"},{"id":"f41d11d3971f5aeb705f172704023e46","title":"C++队列","content":"这里讲 STL 中的队列。\n图片  \n队列的常用函数（成员函数）\npush(x):将元素 xxx 压入队尾。\npop():将队首元素弹出。\nfront():返回队首元素。\nsize():返回队列中元素的个数。\nempty():判断队列是否为空。\n\n注意：STL 中的队列常数有点大，而且在队列内没有元素时使用pop()函数或front()会RE，如果不嫌麻烦，可以用数组模拟。\n例题 请模拟一个队列。将有 ttt 次操作，每次操作至少会给你一个 opopop。每输出一个数换一次行.分为三种操作：  \n\n会在给你一个 xxx，请将 xxx 压入队尾。\n如果队列内是空的，请输出 RE 并不再操作，否则输出队首元素并弹出。\n输出元素个数。\n\n代码# include &#x3C;bits/stdc++.h>\nusing namespace std;\nint t , op , x;\nqueue &#x3C;int> q;\nint main()\n&#123;\n\tcin >> t;\n\twhile(t --)\n\t&#123;\n\t\tcin >> op;\n\t\tif(op == 1)\n\t\t&#123;\n\t\t\tcin >> x;\n\t\t\tq.push(x);\n\t\t&#125;\n\t\telse if(op == 2)\n\t\t&#123;\n\t\t\tif(q.empty())\n\t\t\t&#123;\n\t\t\t\tcout &#x3C;&#x3C; \"RE\" &#x3C;&#x3C; \"\\n\";\n\t\t\t\treturn 0;\n\t\t\t&#125;\n\t\t\tcout &#x3C;&#x3C; q.front() &#x3C;&#x3C; \"\\n\";\n\t\t\tq.pop();\n\t\t&#125;\n\t\telse\n\t\t&#123;\n\t\t\tcout &#x3C;&#x3C; q.size() &#x3C;&#x3C; \"\\n\";\n\t\t&#125;\n\t&#125;\n\treturn 0;\n&#125;\n\n\n","slug":"C++队列","date":"2025-05-08T16:00:00.000Z","categories_index":"C++","tags_index":"OI,STL","author_index":"CodeNebula"},{"id":"92b0566789a1e5e04caf849ecf111b35","title":"C++进制转换相关","content":"自带\n\n\n\n\n\n\n注意\n只有\n\noct，八进制\ndec，十进制\nhex，十六进制\n\n\n\n代码\n# include &#x3C;bits/stdc++.h>\nusing namespace std;\nint main()\n&#123;\n    //格式化\n    printf(\"%o\\n\" , 18);\n    printf(\"%d\\n\" , 18);\n    printf(\"%x\\n\" , 18);\n    //输入流\n    cout &#x3C;&#x3C; oct &#x3C;&#x3C; 18 &#x3C;&#x3C; \"\\n\";\n    cout &#x3C;&#x3C; dec &#x3C;&#x3C; 18 &#x3C;&#x3C; \"\\n\";\n    cout &#x3C;&#x3C; hex &#x3C;&#x3C; 18 &#x3C;&#x3C; \"\\n\"; \n    return 0;\n&#125;\n\n库函数这个函数在 cstdlib 中。\nitoa(num , str , base)中，num表示参与转换的整型（整数，非字符串），str表示结果存哪儿，base表示要转化的进制。\n代码\n# include &#x3C;bits/stdc++.h>\nusing namespace std;\nchar s[110];\nint main()\n&#123;\n    itoa(18 , s , 2);\n    printf(\"%s\\n\" , s);\n    return 0;  \n&#125;\n\n手写最万能的，最靠谱的。\nnnn 转 101010long long ntoD(string s , int p)&#123;\n\tlong long ans = 0;\n\tfor(int i = 0 ; i &#x3C; s.size() ; i++)&#123;\n\t\tint x = 0;\n\t\tif(s[i] >= '0' &#x26;&#x26; s[i] &#x3C;= '9')&#123;\n\t\t\tx = s[i] - '0';\n\t\t&#125;else&#123;\n\t\t\tx = s[i] - 'A' + 10;\n\t\t&#125;\n\t\tans = ans * p + x;\n\t&#125;\n\treturn ans;\n&#125;\n\n101010 转 nnnstring l = \"0123456789ABCDEF\";\nstring Dton(int n, int p)&#123;\n\tstring a = \"\";\n\twhile(n > 0)&#123;\n\t\tint x = n % p;\n\t\ta = l[x] + a;\n\t\tn = n / p;\n\t&#125;\n\treturn a;\n&#125;\n\n技巧当是 nnn 进制转 mmm 进制时，先将 nnn 转成 101010 进制，再将转换结果转成 mmm 进制。\n\n","slug":"C++进制转换相关","date":"2025-05-05T16:00:00.000Z","categories_index":"C++","tags_index":"OI,语法","author_index":"CodeNebula"},{"id":"a6b94d3de8f1fc6031ddcd36a585105b","title":"C++质数相关","content":"1.判断质数1.单一判断用作判断次数不多时使用。\nbool is_prime(int x)\n&#123;\n    if(x &#x3C;= 1)\n    &#123;\n        return 0;\n    &#125;\n    for(int i = 2 ; i * i &#x3C;= x ; i ++)\n    &#123;\n        if(x % i == 0)\n        &#123;\n            return 0;\n        &#125;\n    &#125;\n    return 1;\n&#125;\n\n解释：我们把一个数拆成 x×yx \\times yx×y，发现永远 xxx 小于 n\\sqrt nn​，所以只要 nnn 不能整除 ≤n\\le \\sqrt n≤n​ 的整数，就是一个质数，提高了很多效率。但要注意，n≤1n \\le 1n≤1 需单独处理。\n2.埃氏筛法当我们要进行多次判断时，就可能需要用到埃氏筛法。小学数学课讲过，放个图片应该就能理解。\n\nisn_t_prime[0] = isn_t_prime[1] = 1;\nfor(int i = 2 ; i &#x3C;= 1e6 ; i ++)\n&#123;\n    if(isn_t_prime[i])\n    &#123;\n        continue;\n    &#125;\n    for(int j = 2 ; i * j &#x3C;= 1e6 ; j ++)\n    &#123;\n        isn_t_prime[i * j] = 1;\n    &#125;\n&#125;\n\n解释：为了省去初始化数组全部为 111 的时间，000 才代表这是一个质数。碰到一个没达标记的数，就把它的倍数全部打上标记，重复标记是没问题的。但 nnn 要 ≤106\\le 10^6≤106，不然容易超时，n≥106n \\ge 10^6n≥106 时，还是用方法一较为合适。\n\n","slug":"C++质数相关","date":"2025-05-05T16:00:00.000Z","categories_index":"C++","tags_index":"OI,语法","author_index":"CodeNebula"}]